{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/Tags/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","_components_Tags__WEBPACK_IMPORTED_MODULE_6__","tags","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Layout","header","_this$props","children","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Bio","_public_static_d_1912274654_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","twitter","Tag","tag","className","styles","link","kebabCase","Tags","_ref2"],"mappings":"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","file":"component---src-pages-index-js-aed63cc9ffa68a20245d.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Tags from '../components/Tags';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                style={{ marginBottom: '0.5em' }}\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n              <Tags tags={node.frontmatter.tags} />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\n\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css';\nimport './layout.scss';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br/>\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a> <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst Tag = ({ tag }) => (\r\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\r\n    <li className={styles.tag}>{tag}</li>\r\n  </Link>\r\n);\r\n\r\nconst Tags = ({ tags }) => (\r\n  <ul className={styles.tags}>\r\n    {(tags || []).map(tag => (\r\n      <Tag key={tag} tag={tag} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tags;\r\n"],"sourceRoot":""}