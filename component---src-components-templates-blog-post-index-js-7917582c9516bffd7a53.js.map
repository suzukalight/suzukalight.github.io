{"version":3,"sources":["webpack:///./src/components/templates/BlogPost/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/Bio/index.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_Layout__WEBPACK_IMPORTED_MODULE_7__","location","_atoms_Seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","Object","assign","scale","display","date","_atoms_Tags__WEBPACK_IMPORTED_MODULE_5__","tags","dangerouslySetInnerHTML","__html","html","_molecules_Bio__WEBPACK_IMPORTED_MODULE_6__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","typography","Typography","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","json","propTypes","shape","pathname","Seo","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Layout","header","_this$props","children","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","Date","getFullYear","href","Tag","tag","gatsby__WEBPACK_IMPORTED_MODULE_2__","className","styles","link","kebabCase","Tags","_ref2","map","key","Bio","_public_static_d_118839701_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","root","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","twitter"],"mappings":"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","file":"component---src-components-templates-blog-post-index-js-7917582c9516bffd7a53.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Seo from '../../atoms/Seo';\nimport Tags from '../../atoms/Tags';\nimport Bio from '../../molecules/Bio';\nimport Layout from '../Layout';\n\nimport { rhythm, scale } from '../../../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Seo\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <Tags tags={post.frontmatter.tags} />\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../../../utils/typography';\n\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css';\nimport './layout.scss';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ tags }) => (\n  <ul className={styles.tags}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = () => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n        // style={styles.heroImageWrap}\n        // imgStyle={styles.heroImage}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br />\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a>{' '}\n        <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}