{"version":3,"sources":["webpack:///./src/components/templates/BlogPost/source-contentful.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/atoms/Avatar/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/article.js","webpack:///./src/utils/dom.jsx","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js","webpack:///./src/components/atoms/Iframely/index.js","webpack:///./src/components/molecules/Bio/index.js","webpack:///./src/components/molecules/SocialLinks/index.js","webpack:///./src/utils/contentful.jsx","webpack:///./src/components/templates/BlogPost/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","___WEBPACK_IMPORTED_MODULE_0__","BlogPost","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography","Typography","GitHub","rhythm","scale","Avatar","data","_4202243309","author","site","siteMetadata","react_default","createElement","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Seo","description","lang","meta","title","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","Header","social","className","styles","header","headerInner","headerSiteTitle","gatsby__WEBPACK_IMPORTED_MODULE_2__","siteName","to","headerSocials","socialItem","href","twitter","github","Footer","_ref2","footer","footerInner","footerAvatar","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_3__","footerLink","footerCopyright","Centered","_ref3","children","centered","Layout","_ref4","_data$site$siteMetada","_public_static_d_3083137340_json__WEBPACK_IMPORTED_MODULE_0__","root","main","convertFromMarkdownToArticle","markdownRemark","html","frontmatter","fields","tableOfContents","excerpt","head","source","body","convertFromContentfulToArticle","contentfulArticle","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","slug","richTextJson","convertToArticle","convertToArticles","allMarkdownRemark","allContentfulArticle","articlesGitHub","edges","map","e","node","articlesContentful","sortByDate","sort","b","differenceInMilliseconds","date","getFluidImage","image","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","sizes","getFixedImage","Tag","tag","gatsby_browser_entry","link","kebabCase","Tags","tags","cn","Tags_Tag","key","DateAndTags","format","atoms_Tags","Iframely","componentDidMount","window","iframely","load","render","Helmet_default","type","src","charset","Component","Bio","_3616292556","username","SocialLinks","url","via","_1379133183","siteUrl","twitterAccount","fullUrl","item","FacebookShareButton","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","LineShareButton","LineIcon","PocketShareButton","PocketIcon","hatebu","data-hatena-bookmark-layout","data-hatena-bookmark-width","data-hatena-bookmark-height","hatebuImage","width","height","charSet","async","renderOptions","renderNode","_renderNode","BLOCKS","PARAGRAPH","_","EMBEDDED_ASSET","target","file","key1","keys","_file$key","contentType","split","Pager","previous","next","footerPager","pager","prev","rel","BlogPostTemplate","pageContext","Iframely_Iframely","category","hero","toc","tocHeader","tocBody","dangerouslySetInnerHTML","__html","article","documentToReactComponents","molecules_SocialLinks","socialLinks","molecules_Bio","bio","BlogPost_Pager","BlogPost_BlogPostTemplate"],"mappings":"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","file":"component---src-components-templates-blog-post-source-contentful-js-ef33a1ec0584839553c3.js","sourcesContent":["import { graphql } from 'gatsby';\n\nimport BlogPost from './';\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n  query ContentfulBlogPostBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    contentfulArticle(id: { eq: $id }) {\n      id\n      slug\n      title\n      description\n      body {\n        json\n      }\n      date\n      category\n      tags\n      hero {\n        title\n        description\n        sizes(maxWidth: 1440) {\n          ...GatsbyContentfulSizes\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nconst typography = new Typography(GitHub);\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nconst query = graphql`\n  query AvatarQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Avatar = () => {\n  const data = useStaticQuery(query);\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Image\n      fixed={data.avatar.childImageSharp.fixed}\n      alt={author}\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        minWidth: 50,\n        borderRadius: `100%`,\n      }}\n      imgStyle={{\n        borderRadius: `50%`,\n      }}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Link } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query LayoutQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = ({ title, social }) => (\n  <header className={styles.header}>\n    <div className={styles.headerInner}>\n      <h3 className={styles.headerSiteTitle}>\n        <Link className={styles.siteName} to={`/`}>\n          {title}\n        </Link>\n      </h3>\n      <ul className={styles.headerSocials}>\n        <li className={styles.socialItem}>\n          <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n        </li>\n        <li className={styles.socialItem}>\n          <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n\nexport const Footer = ({ author }) => (\n  <footer className={styles.footer}>\n    <div className={styles.footerInner}>\n      <div className={styles.footerAvatar}>\n        <Avatar />\n        <Link to=\"/\" className={styles.footerLink}>\n          suzukalight.com\n        </Link>\n      </div>\n      <p className={styles.footerCopyright}>{`© 2019 by ${author}`}</p>\n    </div>\n  </footer>\n);\n\nexport const Centered = ({ children }) => <div className={styles.centered}>{children}</div>;\n\nexport const Layout = ({ location, title, children }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Header location={location} title={title} social={social} />\n      <main className={styles.main}>{children}</main>\n      <Footer author={author} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import differenceInMilliseconds from 'date-fns/difference_in_milliseconds';\n\nexport const convertFromMarkdownToArticle = data => {\n  const { site, markdownRemark } = data || {};\n  const { html, frontmatter, fields, tableOfContents, excerpt } = markdownRemark;\n  const description = frontmatter.description || frontmatter.excerpt;\n\n  return {\n    head: {\n      ...frontmatter,\n      ...fields,\n      tableOfContents,\n      excerpt,\n      description,\n      source: 'github',\n    },\n    body: html,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertFromContentfulToArticle = data => {\n  const { site, contentfulArticle } = data || {};\n  const { body, ...head } = contentfulArticle;\n  const description = head.description || head.excerpt;\n\n  return {\n    head: {\n      ...head,\n      description,\n      source: 'contentful',\n      slug: `/${head.slug}/`,\n    },\n    richTextJson: (body || {}).json,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertToArticle = data => {\n  if (!data) return null;\n  if (data.markdownRemark) return convertFromMarkdownToArticle(data);\n  if (data.contentfulArticle) return convertFromContentfulToArticle(data);\n  return null;\n};\n\nexport const convertToArticles = data => {\n  if (!data) return null;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n\n  const articlesGitHub = ((allMarkdownRemark || {}).edges || []).map(e =>\n    convertFromMarkdownToArticle({ site, markdownRemark: e.node }),\n  );\n  const articlesContentful = ((allContentfulArticle || {}).edges || []).map(e =>\n    convertFromContentfulToArticle({ site, contentfulArticle: e.node }),\n  );\n\n  return [...articlesGitHub, ...articlesContentful];\n};\n\nexport const sortByDate = data =>\n  data.sort((a, b) =>\n    differenceInMilliseconds(((b || {}).head || {}).date, ((a || {}).head || {}).date),\n  );\n","import React from 'react';\nimport Image from 'gatsby-image';\n\nexport const getFluidImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fluid={image.childImageSharp.fluid} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n\nexport const getFixedImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fixed={image.childImageSharp.fixed} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ className, tags }) => (\n  <ul className={cn(styles.tags, className)}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport cn from 'classnames';\nimport format from 'date-fns/format';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ className, date, tags }) => (\n  <div className={cn(styles.root, className)}>\n    <small className={styles.date}>{format(date, 'YYYY/M/D')}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport default class Iframely extends React.Component {\n  componentDidMount() {\n    // 記事ページから古い記事に遷移したときにもロードされるようにする\n    if (window.iframely) {\n      window.iframely.load();\n    }\n  }\n\n  render() {\n    // マークダウンファイルにembed.jsのスクリプトタグを記述しても読み込まれないため\n    // コンポーネントでReact Helmetを使って読み込む\n    return (\n      <Helmet>\n        <script type=\"text/javascript\" src=\"https://cdn.iframe.ly/embed.js\" charset=\"utf-8\" />\n      </Helmet>\n    );\n  }\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = ({ className }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={cn(styles.root, className)}>\n      <Avatar />\n\n      <div className={styles.description}>\n        <p className={styles.username}>\n          Written by <strong>{author}</strong>.\n        </p>\n\n        <ul className={styles.social}>\n          <li className={styles.socialItem}>\n            <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n          </li>\n          <li className={styles.socialItem}>\n            <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  LineShareButton,\n  PocketShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  LineIcon,\n  PocketIcon,\n} from 'react-share';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query SocialLinksQuery {\n    site {\n      siteMetadata {\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst SocialLinks = ({ className, url, title, via }) => {\n  const data = useStaticQuery(query);\n  const { siteUrl, social } = data.site.siteMetadata;\n  const twitterAccount = via || social.twitter;\n  const fullUrl = `${siteUrl}${url}`;\n\n  return (\n    <ul className={cn(styles.root, className)}>\n      <li className={styles.item}>\n        <FacebookShareButton url={fullUrl}>\n          <FacebookIcon size={32} round />\n        </FacebookShareButton>\n      </li>\n      <li className={styles.item}>\n        <TwitterShareButton title={title} via={twitterAccount} url={fullUrl}>\n          <TwitterIcon size={32} round />\n        </TwitterShareButton>\n      </li>\n      <li className={styles.item}>\n        <LineShareButton title={title} url={fullUrl}>\n          <LineIcon size={32} round />\n        </LineShareButton>\n      </li>\n      <li className={styles.item}>\n        <PocketShareButton title={title} url={fullUrl}>\n          <PocketIcon size={32} round />\n        </PocketShareButton>\n      </li>\n      <li className={styles.item}>\n        <div className={styles.hatebu}>\n          <a\n            href=\"https://b.hatena.ne.jp/entry/\"\n            className=\"hatena-bookmark-button\"\n            data-hatena-bookmark-layout=\"basic\"\n            data-hatena-bookmark-width=\"32\"\n            data-hatena-bookmark-height=\"32\"\n            title=\"このエントリーをはてなブックマークに追加\"\n          >\n            <img\n              src=\"https://b.st-hatena.com/images/v4/public/entry-button/button-only@2x.png\"\n              className={styles.hatebuImage}\n              alt=\"このエントリーをはてなブックマークに追加\"\n              width=\"32\"\n              height=\"32\"\n            />\n          </a>\n          <script\n            type=\"text/javascript\"\n            src=\"https://b.st-hatena.com/js/bookmark_button.js\"\n            charSet=\"utf-8\"\n            async=\"async\"\n          ></script>\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\nconst renderOptions = {\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (_, children) => <p className=\"contentful-paragraph\">{children}</p>,\n    [BLOCKS.EMBEDDED_ASSET]: node => {\n      const { target } = node.data || {};\n      const { title, description, file } = (target || {}).fields || {};\n      if (!file) return null;\n\n      const key1 = Object.keys(file)[0];\n      const { contentType, url } = file[key1];\n      const mimeGroup = contentType.split('/')[0];\n\n      switch (mimeGroup) {\n        case 'image': {\n          return (\n            <img\n              title={title ? title[key1] : null}\n              alt={description ? description[key1] : null}\n              src={url}\n            />\n          );\n        }\n        default: {\n          return null;\n        }\n      }\n    },\n  },\n};\n\nexport const contentfulArticleToReactComponents = json => {\n  return documentToReactComponents(json, renderOptions);\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport Seo from '../../atoms/Seo';\nimport Iframely from '../../atoms/Iframely';\nimport DateAndTags from '../../molecules/DateAndTags';\nimport Bio from '../../molecules/Bio';\nimport SocialLinks from '../../molecules/SocialLinks';\nimport { Layout, Centered } from '../Layout';\n\nimport { convertToArticle } from '../../../utils/article';\nimport { contentfulArticleToReactComponents } from '../../../utils/contentful';\nimport { getFluidImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst Pager = ({ previous, next }) => (\n  <div className={styles.footerPager}>\n    <ul className={styles.pager}>\n      <li className={styles.prev}>\n        {previous && (\n          <Link to={previous.head.slug} rel=\"prev\">\n            {`← ${previous.head.title}`}\n          </Link>\n        )}\n      </li>\n      <li className={styles.next}>\n        {next && (\n          <Link to={next.head.slug} rel=\"next\">\n            {`${next.head.title} →`}\n          </Link>\n        )}\n      </li>\n    </ul>\n  </div>\n);\n\nconst BlogPostTemplate = ({ location, siteMetadata, head, body, richTextJson, pageContext }) => (\n  <Layout location={location} title={siteMetadata.title}>\n    <Seo title={head.title} description={head.description} />\n    <Iframely />\n\n    <Centered>\n      <section className={styles.head}>\n        <Link className={styles.category} to={`/categories/${kebabCase(head.category)}`}>\n          <span>{head.category}</span>\n        </Link>\n        <h1 className={styles.title}>{head.title}</h1>\n        <p className={styles.description}>{head.description}</p>\n        <DateAndTags date={head.date} tags={head.tags} />\n\n        {head.hero && <div className={styles.hero}>{getFluidImage(head.hero)}</div>}\n      </section>\n\n      {head && head.tableOfContents && (\n        <section className={styles.toc}>\n          <h1 className={styles.tocHeader}>目次</h1>\n          <div\n            className={styles.tocBody}\n            dangerouslySetInnerHTML={{ __html: head.tableOfContents }}\n          />\n        </section>\n      )}\n\n      {body && <div className={styles.article} dangerouslySetInnerHTML={{ __html: body }} />}\n      {richTextJson && (\n        <div className={styles.article}>{contentfulArticleToReactComponents(richTextJson)}</div>\n      )}\n\n      <section className={styles.footer}>\n        <SocialLinks className={styles.socialLinks} url={head.slug} title={head.title} />\n        <Bio className={styles.bio} />\n        <Pager previous={pageContext.previous} next={pageContext.next} />\n      </section>\n    </Centered>\n  </Layout>\n);\n\nconst BlogPost = ({ data, pageContext }) => {\n  return <BlogPostTemplate {...convertToArticle(data)} pageContext={pageContext} />;\n};\n\nexport default BlogPost;\n"],"sourceRoot":""}