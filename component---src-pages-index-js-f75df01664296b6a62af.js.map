{"version":3,"sources":["webpack:///./src/components/pages/Root/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/atoms/Avatar/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/article.js","webpack:///./src/utils/dom.jsx","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js","webpack:///./src/components/molecules/Hero/index.js","webpack:///./src/components/atoms/Card/index.js","webpack:///./src/components/molecules/PostCard/index.js","webpack:///./src/components/molecules/Posts/index.js"],"names":["IndexPage","_ref","location","siteMetadata","posts","react_default","a","createElement","Layout","title","Seo","description","className","styles","root","Hero","Posts","__webpack_require__","d","__webpack_exports__","pageQuery","data","pageContext","sortByDate","convertToArticles","Root","site","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Avatar","_public_static_d_4202243309_json__WEBPACK_IMPORTED_MODULE_1__","author","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","lang","meta","image","_public_static_d_178359677_json__WEBPACK_IMPORTED_MODULE_0__","siteUrl","siteTitle","defaultImage","twitter","social","metaTitle","metaDescription","siteImage","metaData","name","content","property","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","Header","header","headerInner","headerSiteTitle","gatsby__WEBPACK_IMPORTED_MODULE_2__","siteName","to","headerSocials","socialItem","href","github","Footer","_ref2","footer","footerInner","footerAvatar","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_3__","footerLink","footerCopyright","Centered","_ref3","children","centered","_ref4","_data$site$siteMetada","_public_static_d_3083137340_json__WEBPACK_IMPORTED_MODULE_0__","main","convertFromMarkdownToArticle","markdownRemark","html","frontmatter","fields","tableOfContents","excerpt","head","source","body","convertFromContentfulToArticle","contentfulArticle","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","slug","richTextJson","convertToArticle","allMarkdownRemark","allContentfulArticle","articlesGitHub","edges","map","e","node","articlesContentful","sort","b","differenceInMilliseconds","date","getFluidImage","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","sizes","getFixedImage","Tag","tag","gatsby_browser_entry","link","kebabCase","Tags","tags","cn","Tags_Tag","key","DateAndTags","format","atoms_Tags","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","caption","Card","CardImage","CardBody","CardTitle","titleInner","CardDescription","_ref5","CardFooter","_ref6","PostCard","post","Card_Card","Card_CardImage","hero","category","Card_CardBody","texts","Card_CardTitle","Card_CardDescription","dangerouslySetInnerHTML","__html","Card_CardFooter","molecules_PostCard"],"mappings":"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","file":"component---src-pages-index-js-f75df01664296b6a62af.js","sourcesContent":["import React from 'react';\n\nimport Seo from '../../atoms/Seo';\nimport Hero from '../../molecules/Hero';\nimport Posts from '../../molecules/Posts';\nimport Layout from '../../templates/Layout';\n\nimport styles from './index.module.scss';\n\nconst IndexPage = ({ location, siteMetadata, posts }) => (\n  <Layout location={location} title={siteMetadata.title}>\n    <Seo title=\"Index\" description=\"なければ作ればいいじゃない\" />\n\n    <div className={styles.root}>\n      <Hero />\n      <Posts posts={posts} />\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Root from '../components/pages/Root';\n\nimport { convertToArticles, sortByDate } from '../utils/article';\n\nconst IndexPage = ({ data, pageContext }) => {\n  const posts = sortByDate(convertToArticles(data));\n\n  return <Root siteMetadata={data.site.siteMetadata} posts={posts} pageContext={pageContext} />;\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { status: { eq: \"published\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            category\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 280, height: 140) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulArticle {\n      edges {\n        node {\n          id\n          title\n          description\n          slug\n          category\n          tags\n          date\n          hero {\n            title\n            description\n            sizes(maxWidth: 1440) {\n              ...GatsbyContentfulSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nconst query = graphql`\n  query AvatarQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Avatar = () => {\n  const data = useStaticQuery(query);\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Image\n      fixed={data.avatar.childImageSharp.fixed}\n      alt={author}\n      style={{\n        marginRight: `0.875rem`,\n        marginBottom: 0,\n        minWidth: 50,\n        borderRadius: `100%`,\n      }}\n      imgStyle={{\n        borderRadius: `50%`,\n      }}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        description\n        defaultImage\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title, image }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site || {};\n  const {\n    siteUrl,\n    title: siteTitle,\n    defaultImage,\n    social: { twitter },\n  } = siteMetadata;\n  const metaTitle = `${title}${title && ' | '}${siteTitle}`;\n  const metaDescription = description || siteMetadata.description;\n  const siteImage = `${siteUrl}${image || defaultImage}`;\n  const metaData = [\n    { name: `image`, content: siteImage },\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: metaTitle },\n    { property: `og:type`, content: `website` },\n    { property: `og:image`, content: siteImage },\n    // { property: `og:url`, content: siteImage },\n    { property: `og:description`, content: metaDescription },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: twitter },\n    { name: `twitter:title`, content: metaTitle },\n    { name: `twitter:description`, content: metaDescription },\n    { name: `twitter:image`, content: siteImage },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Link } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query LayoutQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = ({ title, social }) => (\n  <header className={styles.header}>\n    <div className={styles.headerInner}>\n      <h3 className={styles.headerSiteTitle}>\n        <Link className={styles.siteName} to={`/`}>\n          {title}\n        </Link>\n      </h3>\n      <ul className={styles.headerSocials}>\n        <li className={styles.socialItem}>\n          <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n        </li>\n        <li className={styles.socialItem}>\n          <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n\nexport const Footer = ({ author }) => (\n  <footer className={styles.footer}>\n    <div className={styles.footerInner}>\n      <div className={styles.footerAvatar}>\n        <Avatar />\n        <Link to=\"/\" className={styles.footerLink}>\n          suzukalight.com\n        </Link>\n      </div>\n      <p className={styles.footerCopyright}>{`© 2019 by ${author}`}</p>\n    </div>\n  </footer>\n);\n\nexport const Centered = ({ children }) => <div className={styles.centered}>{children}</div>;\n\nexport const Layout = ({ location, title, children }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Header location={location} title={title} social={social} />\n      <main className={styles.main}>{children}</main>\n      <Footer author={author} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import differenceInMilliseconds from 'date-fns/difference_in_milliseconds';\n\nexport const convertFromMarkdownToArticle = data => {\n  const { site, markdownRemark } = data || {};\n  const { html, frontmatter, fields, tableOfContents, excerpt } = markdownRemark;\n  const description = frontmatter.description || frontmatter.excerpt;\n\n  return {\n    head: {\n      ...frontmatter,\n      ...fields,\n      tableOfContents,\n      excerpt,\n      description,\n      source: 'github',\n    },\n    body: html,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertFromContentfulToArticle = data => {\n  const { site, contentfulArticle } = data || {};\n  const { body, ...head } = contentfulArticle;\n  const description = head.description || head.excerpt;\n\n  return {\n    head: {\n      ...head,\n      description,\n      source: 'contentful',\n      slug: `/${head.slug}/`,\n    },\n    richTextJson: (body || {}).json,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertToArticle = data => {\n  if (!data) return null;\n  if (data.markdownRemark) return convertFromMarkdownToArticle(data);\n  if (data.contentfulArticle) return convertFromContentfulToArticle(data);\n  return null;\n};\n\nexport const convertToArticles = data => {\n  if (!data) return null;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n\n  const articlesGitHub = ((allMarkdownRemark || {}).edges || []).map(e =>\n    convertFromMarkdownToArticle({ site, markdownRemark: e.node }),\n  );\n  const articlesContentful = ((allContentfulArticle || {}).edges || []).map(e =>\n    convertFromContentfulToArticle({ site, contentfulArticle: e.node }),\n  );\n\n  return [...articlesGitHub, ...articlesContentful];\n};\n\nexport const sortByDate = data =>\n  data.sort((a, b) =>\n    differenceInMilliseconds(((b || {}).head || {}).date, ((a || {}).head || {}).date),\n  );\n","import React from 'react';\nimport Image from 'gatsby-image';\n\nexport const getFluidImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fluid={image.childImageSharp.fluid} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n\nexport const getFixedImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fixed={image.childImageSharp.fixed} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ className, tags }) => (\n  <ul className={cn(styles.tags, className)}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport cn from 'classnames';\nimport format from 'date-fns/format';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ className, date, tags }) => (\n  <div className={cn(styles.root, className)}>\n    <small className={styles.date}>{format(date, 'YYYY/M/D')}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n","import React from 'react';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst Hero = ({ node, title }) => (\n  <div className={styles.root}>\n    <h1 className={styles.title}>\n      <Avatar />\n      <span>suzukalight.com</span>\n    </h1>\n    <small className={styles.caption}>まずは技術中心に</small>\n  </div>\n);\n\nexport default Hero;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport const Card = ({ children, className }) => (\n  <div className={cn(styles.root, className)}>{children}</div>\n);\n\nexport const CardImage = ({ children, className }) => (\n  <div className={cn(styles.image, className)}>{children}</div>\n);\n\nexport const CardBody = ({ children, className }) => (\n  <div className={cn(styles.body, className)}>{children}</div>\n);\n\nexport const CardTitle = ({ children, className }) => (\n  <h1 className={cn(styles.title, className)}>\n    <span className={styles.titleInner}>{children}</span>\n  </h1>\n);\n\nexport const CardDescription = ({ children, className }) => (\n  <div className={cn(styles.description, className)}>{children}</div>\n);\n\nexport const CardFooter = ({ children, className }) => (\n  <div className={cn(styles.footer, className)}>{children}</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport {\n  Card,\n  CardImage,\n  CardBody,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '../../atoms/Card';\nimport DateAndTags from '../../molecules/DateAndTags';\n\nimport { getFixedImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst PostCard = ({ className, post }) => (\n  <Card className={cn(styles.root, className)}>\n    <CardImage>\n      <Link className={styles.image} to={post.head.slug}>\n        {getFixedImage(post.head.hero)}\n      </Link>\n      <Link className={styles.category} to={`/categories/${kebabCase(post.head.category)}`}>\n        <span>{post.head.category}</span>\n      </Link>\n    </CardImage>\n\n    <CardBody>\n      <div className={styles.texts}>\n        <Link className={styles.link} to={post.head.slug}>\n          <CardTitle>{post.head.title}</CardTitle>\n          <CardDescription>\n            <p\n              className={styles.excerpt}\n              dangerouslySetInnerHTML={{\n                __html: post.head.description || post.head.excerpt,\n              }}\n            />\n          </CardDescription>\n        </Link>\n      </div>\n\n      <CardFooter>\n        <DateAndTags className={styles.tags} date={post.head.date} tags={post.head.tags} />\n      </CardFooter>\n    </CardBody>\n  </Card>\n);\n\nexport default PostCard;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport PostCard from '../../molecules/PostCard';\n\nimport styles from './index.module.scss';\n\nconst Posts = ({ className, posts }) => (\n  <section className={cn(styles.root, className)}>\n    {posts.map(post => (\n      <PostCard key={post.head.slug} post={post} />\n    ))}\n  </section>\n);\n\nexport default Posts;\n"],"sourceRoot":""}