{"version":3,"sources":["webpack:///./src/components/pages/Root/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/molecules/Hero/index.js","webpack:///./src/components/atoms/Card/index.js","webpack:///./src/components/molecules/PostCard/index.js","webpack:///./src/components/molecules/Posts/index.js"],"names":["IndexPage","location","siteMetadata","posts","Layout","title","Seo","description","className","styles","root","Hero","Posts","data","pageContext","sortByDate","convertToArticles","Root","site","pageQuery","node","caption","Card","children","cn","CardImage","image","CardBody","body","CardTitle","titleInner","CardDescription","CardFooter","footer","PostCard","post","to","head","slug","getFixedImage","hero","category","kebabCase","texts","link","excerpt","dangerouslySetInnerHTML","__html","DateAndTags","tags","date","map","key"],"mappings":"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","file":"component---src-pages-index-js-eab8438ad1d716f6d40b.js","sourcesContent":["import React from 'react';\n\nimport Seo from '../../atoms/Seo';\nimport Hero from '../../molecules/Hero';\nimport Posts from '../../molecules/Posts';\nimport Layout from '../../templates/Layout';\n\nimport styles from './index.module.scss';\n\nconst IndexPage = ({ location, siteMetadata, posts }) => (\n  <Layout location={location} title={siteMetadata.title}>\n    <Seo title=\"Index\" description=\"なければ作ればいいじゃない\" />\n\n    <div className={styles.root}>\n      <Hero />\n      <Posts posts={posts} />\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Root from '../components/pages/Root';\n\nimport { convertToArticles, sortByDate } from '../utils/article';\n\nconst IndexPage = ({ data, pageContext }) => {\n  const posts = sortByDate(convertToArticles(data));\n\n  return <Root siteMetadata={data.site.siteMetadata} posts={posts} pageContext={pageContext} />;\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { status: { eq: \"published\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            category\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 280, height: 140) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulArticle {\n      edges {\n        node {\n          id\n          title\n          description\n          slug\n          category\n          tags\n          date\n          hero {\n            title\n            description\n            sizes(maxWidth: 1440) {\n              ...GatsbyContentfulSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst Hero = ({ node, title }) => (\n  <div className={styles.root}>\n    <h1 className={styles.title}>\n      <Avatar />\n      <span>suzukalight.com</span>\n    </h1>\n    <small className={styles.caption}>まずは技術中心に</small>\n  </div>\n);\n\nexport default Hero;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport const Card = ({ children, className }) => (\n  <div className={cn(styles.root, className)}>{children}</div>\n);\n\nexport const CardImage = ({ children, className }) => (\n  <div className={cn(styles.image, className)}>{children}</div>\n);\n\nexport const CardBody = ({ children, className }) => (\n  <div className={cn(styles.body, className)}>{children}</div>\n);\n\nexport const CardTitle = ({ children, className }) => (\n  <h1 className={cn(styles.title, className)}>\n    <span className={styles.titleInner}>{children}</span>\n  </h1>\n);\n\nexport const CardDescription = ({ children, className }) => (\n  <div className={cn(styles.description, className)}>{children}</div>\n);\n\nexport const CardFooter = ({ children, className }) => (\n  <div className={cn(styles.footer, className)}>{children}</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport {\n  Card,\n  CardImage,\n  CardBody,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '../../atoms/Card';\nimport DateAndTags from '../../molecules/DateAndTags';\n\nimport { getFixedImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst PostCard = ({ className, post }) => (\n  <Card className={cn(styles.root, className)}>\n    <CardImage>\n      <Link className={styles.image} to={post.head.slug}>\n        {getFixedImage(post.head.hero)}\n      </Link>\n      <Link className={styles.category} to={`/categories/${kebabCase(post.head.category)}`}>\n        <span>{post.head.category}</span>\n      </Link>\n    </CardImage>\n\n    <CardBody>\n      <div className={styles.texts}>\n        <Link className={styles.link} to={post.head.slug}>\n          <CardTitle>{post.head.title}</CardTitle>\n          <CardDescription>\n            <p\n              className={styles.excerpt}\n              dangerouslySetInnerHTML={{\n                __html: post.head.description || post.head.excerpt,\n              }}\n            />\n          </CardDescription>\n        </Link>\n      </div>\n\n      <CardFooter>\n        <DateAndTags className={styles.tags} date={post.head.date} tags={post.head.tags} />\n      </CardFooter>\n    </CardBody>\n  </Card>\n);\n\nexport default PostCard;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport PostCard from '../../molecules/PostCard';\n\nimport styles from './index.module.scss';\n\nconst Posts = ({ className, posts }) => (\n  <section className={cn(styles.root, className)}>\n    {posts.map(post => (\n      <PostCard key={post.head.slug} post={post} />\n    ))}\n  </section>\n);\n\nexport default Posts;\n"],"sourceRoot":""}