{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/Bio/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_templates_Layout__WEBPACK_IMPORTED_MODULE_6__","location","_components_atoms_Seo__WEBPACK_IMPORTED_MODULE_3__","_components_molecules_Bio__WEBPACK_IMPORTED_MODULE_5__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","_components_atoms_Tags__WEBPACK_IMPORTED_MODULE_4__","tags","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","typography","Typography","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Seo","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Layout","header","_this$props","children","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","Tag","tag","className","styles","link","kebabCase","Tags","_ref2","Bio","_public_static_d_118839701_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","root","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","twitter"],"mappings":"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","file":"component---src-pages-index-js-a18b6de0704bcdba9470.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Seo from '../components/atoms/Seo';\r\nimport Tags from '../components/atoms/Tags';\r\nimport Bio from '../components/molecules/Bio';\r\nimport Layout from '../components/templates/Layout';\r\nimport { rhythm } from '../utils/typography';\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const siteTitle = data.site.siteMetadata.title;\r\n    const posts = data.allMarkdownRemark.edges;\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug;\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3 style={{ marginBottom: rhythm(1 / 4) }}>\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n              <p\r\n                style={{ marginBottom: '0.5em' }}\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n              <Tags tags={node.frontmatter.tags} />\r\n            </div>\r\n          );\r\n        })}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogIndex;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../../../utils/typography';\n\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css';\nimport './layout.scss';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ tags }) => (\n  <ul className={styles.tags}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = () => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n        // style={styles.heroImageWrap}\n        // imgStyle={styles.heroImage}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br />\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a>{' '}\n        <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}