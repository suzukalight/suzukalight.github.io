{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/atoms/Avatar/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_atoms_Seo__WEBPACK_IMPORTED_MODULE_1__","_components_templates_Layout__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","location","data","a","createElement","title","site","siteMetadata","titleteTitle","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Seo","description","lang","meta","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","author","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","propTypes","arrayOf","Header","social","className","styles","header","headerInner","headerSiteTitle","gatsby__WEBPACK_IMPORTED_MODULE_2__","siteName","to","headerSocials","socialItem","href","twitter","github","Footer","_ref2","footer","footerInner","footerAvatar","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_3__","footerLink","footerCopyright","Centered","_ref3","children","centered","Layout","_ref4","_data$site$siteMetada","_public_static_d_3083137340_json__WEBPACK_IMPORTED_MODULE_0__","root","main","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","baseFontSize","baseLineHeight","blockMarginBottom","typography","Typography","rhythm","scale","Avatar","_4202243309","react_default","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname"],"mappings":"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","file":"component---src-pages-404-js-0020488cccb6b426fb70.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Seo from '../components/atoms/Seo';\nimport Layout from '../components/templates/Layout';\n\nconst NotFoundPage = ({ location, data }) => (\n  <Layout location={location} title={data.site.siteMetadata.titleteTitle}>\n    <Seo title=\"404: Not Found\" />\n    <h1>Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Link } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query LayoutQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = ({ title, social }) => (\n  <header className={styles.header}>\n    <div className={styles.headerInner}>\n      <h3 className={styles.headerSiteTitle}>\n        <Link className={styles.siteName} to={`/`}>\n          {title}\n        </Link>\n      </h3>\n      <ul className={styles.headerSocials}>\n        <li className={styles.socialItem}>\n          <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n        </li>\n        <li className={styles.socialItem}>\n          <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n\nexport const Footer = ({ author }) => (\n  <footer className={styles.footer}>\n    <div className={styles.footerInner}>\n      <div className={styles.footerAvatar}>\n        <Avatar />\n        <Link to=\"/\" className={styles.footerLink}>\n          suzukalight.com\n        </Link>\n      </div>\n      <p className={styles.footerCopyright}>{`© 2019 by ${author}`}</p>\n    </div>\n  </footer>\n);\n\nexport const Centered = ({ children }) => <div className={styles.centered}>{children}</div>;\n\nexport const Layout = ({ location, title, children }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Header location={location} title={title} social={social} />\n      <main className={styles.main}>{children}</main>\n      <Footer author={author} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nGitHub.baseFontSize = '18px';\nGitHub.baseLineHeight = 1.66;\nGitHub.blockMarginBottom = 1;\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nconst query = graphql`\n  query AvatarQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Avatar = () => {\n  const data = useStaticQuery(query);\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Image\n      fixed={data.avatar.childImageSharp.fixed}\n      alt={author}\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        minWidth: 50,\n        borderRadius: `100%`,\n      }}\n      imgStyle={{\n        borderRadius: `50%`,\n      }}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}