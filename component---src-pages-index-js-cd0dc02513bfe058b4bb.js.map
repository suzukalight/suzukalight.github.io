{"version":3,"sources":["webpack:///./src/components/pages/Root/Posts.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/molecules/Bio/index.js","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js"],"names":["PostItem","_ref","node","title","react_default","a","createElement","className","styles","item","key","fields","slug","description","gatsby_browser_entry","link","to","linkText","excerpt","dangerouslySetInnerHTML","__html","frontmatter","DateAndTags","date","tags","imageWrap","hero","gatsby_image_default","fixed","childImageSharp","Posts","_ref2","posts","map","_ref3","Posts_PostItem","__webpack_require__","d","__webpack_exports__","pageQuery","BlogIndex","location","data","Layout","site","siteMetadata","Seo","Bio","Root_Posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","lang","meta","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","author","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","gatsby__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","HeaderLink","siteName","Header","headerBig","headerSmall","Footer","footer","footerCopyright","footerToHome","children","root","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","baseFontSize","baseLineHeight","blockMarginBottom","typography","Typography","rhythm","scale","_118839701","_data$site$siteMetada","social","avatar","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","href","twitter","Tag","tag","kebabCase","Tags","Tags_Tag","atoms_Tags"],"mappings":"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","file":"component---src-pages-index-js-cd0dc02513bfe058b4bb.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport DateAndTags from '../../molecules/DateAndTags';\n\nimport styles from './Posts.module.scss';\n\nconst PostItem = ({ node, title }) => (\n  <div className={styles.item} key={node.fields.slug}>\n    <div className={styles.description}>\n      <h3 className={styles.title}>\n        <Link className={styles.link} to={node.fields.slug}>\n          <span className={styles.linkText}>{title}</span>\n        </Link>\n      </h3>\n\n      <p\n        className={styles.excerpt}\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n\n      <DateAndTags date={node.frontmatter.date} tags={node.frontmatter.tags} />\n    </div>\n\n    <div className={styles.imageWrap}>\n      {node.frontmatter.hero && <Image fixed={node.frontmatter.hero.childImageSharp.fixed} />}\n    </div>\n  </div>\n);\n\nconst Posts = ({ posts }) =>\n  posts.map(({ node }) => {\n    const title = node.frontmatter.title || node.fields.slug;\n    return <PostItem key={node.fields.slug} node={node} title={title} />;\n  });\n\nexport default Posts;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Seo from '../components/atoms/Seo';\nimport Bio from '../components/molecules/Bio';\nimport Posts from '../components/pages/Root/Posts';\nimport Layout from '../components/templates/Layout';\n\nconst BlogIndex = ({ location, data }) => (\n  <Layout location={location} title={data.site.siteMetadata.title}>\n    <Seo title=\"Index\" description=\"なければ作ればいいじゃない\" />\n    <Bio />\n    <Posts posts={data.allMarkdownRemark.edges} />\n  </Layout>\n);\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/M/D\")\n            title\n            description\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 128, height: 128) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport styles from './index.module.scss';\n\nconst HeaderLink = ({ title }) => (\n  <Link className={styles.siteName} to={`/`}>\n    {title}\n  </Link>\n);\n\nconst Header = ({ location, title }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n\n  return location.pathname === rootPath ? (\n    <header>\n      <h1 className={styles.headerBig}>\n        <HeaderLink title={title} />\n      </h1>\n    </header>\n  ) : (\n    <header>\n      <h3 className={styles.headerSmall}>\n        <HeaderLink title={title} />\n      </h3>\n    </header>\n  );\n};\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <p className={styles.footerCopyright}>© 2019 by suzukalight</p>\n    <p className={styles.footerToHome}>\n      <Link to=\"/\">suzukalight.com</Link>\n    </p>\n  </footer>\n);\n\nconst Layout = ({ location, title, children }) => (\n  <div className={styles.root}>\n    <Header location={location} title={title} />\n    <main>{children}</main>\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nGitHub.baseFontSize = '18px';\nGitHub.baseLineHeight = 1.66;\nGitHub.blockMarginBottom = 1;\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = () => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br />\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a>{' '}\n        <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ tags }) => (\n  <ul className={styles.tags}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ date, tags }) => (\n  <div className={styles.root}>\n    <small className={styles.date}>{date}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n"],"sourceRoot":""}