{"version":3,"sources":["webpack:///./src/components/pages/Root/Posts.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/molecules/Bio/index.js"],"names":["PostItem","_ref","node","title","react_default","a","createElement","className","styles","item","key","fields","slug","description","gatsby_browser_entry","link","to","excerpt","dangerouslySetInnerHTML","__html","frontmatter","date","Tags","tags","imageWrap","hero","gatsby_image_default","fixed","childImageSharp","objectFit","Posts","_ref2","posts","map","_ref3","Posts_PostItem","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","allMarkdownRemark","edges","Layout","location","Seo","Bio","Root_Posts","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","lang","meta","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","author","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","gatsby__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","HeaderLink","siteName","Header","headerBig","headerSmall","children","root","Tag","tag","gatsby__WEBPACK_IMPORTED_MODULE_2__","kebabCase","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","baseFontSize","baseLineHeight","blockMarginBottom","typography","Typography","rhythm","scale","_118839701","_data$site$siteMetada","social","avatar","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","href","twitter"],"mappings":"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","file":"component---src-pages-index-js-2b456f61a897c540fe12.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './Posts.module.scss';\n\nconst PostItem = ({ node, title }) => (\n  <div className={styles.item} key={node.fields.slug}>\n    <div className={styles.description}>\n      <h3 className={styles.title}>\n        <Link className={styles.link} to={node.fields.slug}>\n          {title}\n        </Link>\n      </h3>\n\n      <p\n        className={styles.excerpt}\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n\n      <small className={styles.date}>{node.frontmatter.date}</small>\n\n      <Tags className={styles.tags} tags={node.frontmatter.tags} />\n    </div>\n\n    <div className={styles.imageWrap}>\n      {node.frontmatter.hero && (\n        <Image fixed={node.frontmatter.hero.childImageSharp.fixed} objectFit=\"cover\" />\n      )}\n    </div>\n  </div>\n);\n\nconst Posts = ({ posts, title }) =>\n  posts.map(({ node }) => {\n    const title = node.frontmatter.title || node.fields.slug;\n    return <PostItem key={node.fields.slug} node={node} title={title} />;\n  });\n\nexport default Posts;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Seo from '../components/atoms/Seo';\nimport Bio from '../components/molecules/Bio';\nimport Posts from '../components/pages/Root/Posts';\nimport Layout from '../components/templates/Layout';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Seo title=\"Index\" description=\"なければ作ればいいじゃない\" />\n        <Bio />\n        <Posts posts={posts} />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 128, height:128) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport styles from './index.module.scss';\n\nconst HeaderLink = ({ title }) => (\n  <Link className={styles.siteName} to={`/`}>\n    {title}\n  </Link>\n);\n\nconst Header = ({ location, title }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n\n  return location.pathname === rootPath ? (\n    <header>\n      <h1 className={styles.headerBig}>\n        <HeaderLink title={title} />\n      </h1>\n    </header>\n  ) : (\n    <header>\n      <h3 className={styles.headerSmall}>\n        <HeaderLink title={title} />\n      </h3>\n    </header>\n  );\n};\n\nconst Layout = ({ location, title, children }) => (\n  <div className={styles.root}>\n    <Header location={location} title={title} />\n    <main>{children}</main>\n    <footer>© 2019 by suzukalight</footer>\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ tags }) => (\n  <ul className={styles.tags}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nGitHub.baseFontSize = '18px';\nGitHub.baseLineHeight = 1.66;\nGitHub.blockMarginBottom = 1;\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = () => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br />\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a>{' '}\n        <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}