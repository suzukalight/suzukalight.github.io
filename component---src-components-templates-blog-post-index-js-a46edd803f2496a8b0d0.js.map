{"version":3,"sources":["webpack:///./src/components/templates/BlogPost/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/molecules/Bio/index.js","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","_atoms_Seo__WEBPACK_IMPORTED_MODULE_3__","_molecules_DateAndTags__WEBPACK_IMPORTED_MODULE_4__","_molecules_Bio__WEBPACK_IMPORTED_MODULE_5__","_Layout__WEBPACK_IMPORTED_MODULE_6__","_index_module_scss__WEBPACK_IMPORTED_MODULE_7__","_index_module_scss__WEBPACK_IMPORTED_MODULE_7___default","Pager","_ref","previous","next","a","createElement","className","styles","pager","prev","to","fields","slug","rel","frontmatter","title","BlogPostTemplate","_ref2","location","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","description","excerpt","head","date","tags","hero","fluid","childImageSharp","toc","tocHeader","tocBody","dangerouslySetInnerHTML","__html","tableOfContents","article","html","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Seo","lang","meta","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","author","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","HeaderLink","siteName","Header","headerBig","headerSmall","Footer","footer","footerCopyright","footerToHome","Layout","_ref3","children","root","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","baseFontSize","baseLineHeight","blockMarginBottom","typography","Typography","rhythm","scale","Bio","_118839701","_data$site$siteMetada","social","react_default","gatsby_image_default","fixed","avatar","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","href","twitter","Tag","tag","gatsby_browser_entry","link","kebabCase","Tags","map","Tags_Tag","key","DateAndTags","atoms_Tags"],"mappings":"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","file":"component---src-components-templates-blog-post-index-js-a46edd803f2496a8b0d0.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport Seo from '../../atoms/Seo';\nimport DateAndTags from '../../molecules/DateAndTags';\nimport Bio from '../../molecules/Bio';\nimport Layout from '../Layout';\n\nimport styles from './index.module.scss';\n\nconst Pager = ({ previous, next }) => (\n  <ul className={styles.pager}>\n    <li className={styles.prev}>\n      {previous && (\n        <Link to={previous.fields.slug} rel=\"prev\">\n          {`← ${previous.frontmatter.title}`}\n        </Link>\n      )}\n    </li>\n    <li className={styles.next}>\n      {next && (\n        <Link to={next.fields.slug} rel=\"next\">\n          {`${next.frontmatter.title} →`}\n        </Link>\n      )}\n    </li>\n  </ul>\n);\n\nconst BlogPostTemplate = ({ location, data, pageContext }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const description = post.frontmatter.description || post.excerpt;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={post.frontmatter.title} description={description} />\n\n      <section className={styles.head}>\n        <h1 className={styles.title}>{post.frontmatter.title}</h1>\n        <p className={styles.description}>{description}</p>\n        <DateAndTags date={post.frontmatter.date} tags={post.frontmatter.tags} />\n\n        <div className={styles.hero}>\n          {post.frontmatter.hero && <Image fluid={post.frontmatter.hero.childImageSharp.fluid} />}\n        </div>\n      </section>\n\n      <section className={styles.toc}>\n        <h1 className={styles.tocHeader}>目次</h1>\n        <div\n          className={styles.tocBody}\n          dangerouslySetInnerHTML={{ __html: post.tableOfContents }}\n        />\n      </section>\n\n      <div className={styles.article} dangerouslySetInnerHTML={{ __html: post.html }} />\n\n      <Bio />\n\n      <Pager previous={previous} next={next} />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"YYYY/M/D\")\n        description\n        tags\n        hero {\n          childImageSharp {\n            fluid(maxWidth: 980, maxHeight: 480) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport styles from './index.module.scss';\n\nconst HeaderLink = ({ title }) => (\n  <Link className={styles.siteName} to={`/`}>\n    {title}\n  </Link>\n);\n\nconst Header = ({ location, title }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n\n  return location.pathname === rootPath ? (\n    <header>\n      <h1 className={styles.headerBig}>\n        <HeaderLink title={title} />\n      </h1>\n    </header>\n  ) : (\n    <header>\n      <h3 className={styles.headerSmall}>\n        <HeaderLink title={title} />\n      </h3>\n    </header>\n  );\n};\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <p className={styles.footerCopyright}>© 2019 by suzukalight</p>\n    <p className={styles.footerToHome}>\n      <Link to=\"/\">suzukalight.com</Link>\n    </p>\n  </footer>\n);\n\nconst Layout = ({ location, title, children }) => (\n  <div className={styles.root}>\n    <Header location={location} title={title} />\n    <main>{children}</main>\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nGitHub.baseFontSize = '18px';\nGitHub.baseLineHeight = 1.66;\nGitHub.blockMarginBottom = 1;\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = () => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br />\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a>{' '}\n        <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ tags }) => (\n  <ul className={styles.tags}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ date, tags }) => (\n  <div className={styles.root}>\n    <small className={styles.date}>{date}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n"],"sourceRoot":""}