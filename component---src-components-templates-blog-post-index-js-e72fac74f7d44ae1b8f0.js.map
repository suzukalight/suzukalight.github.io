{"version":3,"sources":["webpack:///./src/components/templates/BlogPost/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/molecules/Bio/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_atoms_Seo__WEBPACK_IMPORTED_MODULE_2__","_atoms_Tags__WEBPACK_IMPORTED_MODULE_3__","_molecules_Bio__WEBPACK_IMPORTED_MODULE_4__","_Layout__WEBPACK_IMPORTED_MODULE_5__","_index_module_scss__WEBPACK_IMPORTED_MODULE_6__","_index_module_scss__WEBPACK_IMPORTED_MODULE_6___default","Pager","_ref","previous","next","a","createElement","className","styles","pager","to","fields","slug","rel","frontmatter","title","BlogPostTemplate","_ref2","location","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","description","excerpt","date","tags","dangerouslySetInnerHTML","__html","html","articleEnd","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Seo","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","HeaderLink","siteName","Header","headerBig","headerSmall","Layout","_ref3","children","root","Tag","tag","gatsby__WEBPACK_IMPORTED_MODULE_2__","link","kebabCase","Tags","map","key","GitHub","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","typography","Typography","rhythm","scale","Bio","_118839701","_data$site$siteMetada","social","react_default","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","href","twitter"],"mappings":"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","file":"component---src-components-templates-blog-post-index-js-e72fac74f7d44ae1b8f0.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Seo from '../../atoms/Seo';\nimport Tags from '../../atoms/Tags';\nimport Bio from '../../molecules/Bio';\nimport Layout from '../Layout';\n\nimport styles from './index.module.scss';\n\nconst Pager = ({ previous, next }) => (\n  <ul className={styles.pager}>\n    <li>\n      {previous && (\n        <Link to={previous.fields.slug} rel=\"prev\">\n          ← {previous.frontmatter.title}\n        </Link>\n      )}\n    </li>\n    <li>\n      {next && (\n        <Link to={next.fields.slug} rel=\"next\">\n          {next.frontmatter.title} →\n        </Link>\n      )}\n    </li>\n  </ul>\n);\n\nconst BlogPostTemplate = ({ location, data, pageContext }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n\n      <h1 className={styles.title}>{post.frontmatter.title}</h1>\n      <p className={styles.date}>{post.frontmatter.date}</p>\n      <Tags tags={post.frontmatter.tags} />\n\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n      <hr className={styles.articleEnd} />\n      <Bio />\n\n      <Pager previous={previous} next={next} />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport styles from './index.module.scss';\n\nconst HeaderLink = ({ title }) => (\n  <Link className={styles.siteName} to={`/`}>\n    {title}\n  </Link>\n);\n\nconst Header = ({ location, title }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n\n  return location.pathname === rootPath ? (\n    <header>\n      <h1 className={styles.headerBig}>\n        <HeaderLink title={title} />\n      </h1>\n    </header>\n  ) : (\n    <header>\n      <h3 className={styles.headerSmall}>\n        <HeaderLink title={title} />\n      </h3>\n    </header>\n  );\n};\n\nconst Layout = ({ location, title, children }) => (\n  <div className={styles.root}>\n    <Header location={location} title={title} />\n    <main>{children}</main>\n    <footer>© 2019 by suzukalight</footer>\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ tags }) => (\n  <ul className={styles.tags}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nGitHub.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\nconst typography = new Typography(GitHub);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = () => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n        // style={styles.heroImageWrap}\n        // imgStyle={styles.heroImage}\n      />\n      <p>\n        Written by <strong>{author}</strong>.<br />\n        <a href={`https://github.com/${social.twitter}`}>GitHub</a>{' '}\n        <a href={`https://twitter.com/${social.twitter}`}>Twitter</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}