{"version":3,"sources":["webpack:///./src/components/templates/Tags/index.js","webpack:///./src/components/molecules/Hero/index.js","webpack:///./src/components/atoms/Card/index.js","webpack:///./src/components/molecules/PostCard/index.js","webpack:///./src/components/molecules/Posts/index.js"],"names":["Tags","location","pageContext","data","tag","site","allMarkdownRemark","allContentfulArticle","tagHeader","totalCount","siteTitle","siteMetadata","title","posts","sortByDate","convertToArticles","className","styles","root","header","heading","allTags","to","pageQuery","Hero","node","caption","Card","children","cn","CardImage","image","CardBody","body","CardTitle","titleInner","CardDescription","description","CardFooter","footer","PostCard","post","head","slug","getFixedImage","hero","category","kebabCase","texts","link","excerpt","dangerouslySetInnerHTML","__html","DateAndTags","tags","date","Posts","map","key"],"mappings":"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","file":"component---src-components-templates-tags-index-js-9689721243a0e86555f4.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../Layout';\nimport Seo from '../../atoms/Seo';\nimport Posts from '../../molecules/Posts';\nimport Hero from '../../molecules/Hero';\n\nimport { convertToArticles, sortByDate } from '../../../utils/article';\n\nimport styles from './index.module.scss';\n\nconst Tags = ({ location, pageContext, data }) => {\n  const { tag } = pageContext;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n  const totalCount = allMarkdownRemark.totalCount + allContentfulArticle.totalCount;\n\n  const tagHeader = `\"${tag}\" に関する記事 (${totalCount}件)`;\n  const siteTitle = site.siteMetadata.title;\n  const posts = sortByDate(convertToArticles(data));\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={tagHeader} />\n\n      <div className={styles.root}>\n        <Hero />\n\n        <h1 className={styles.header}>\n          <span className={styles.heading}>{tagHeader}</span>\n          <span className={styles.allTags}>\n            <Link to=\"/tags\">すべてのタグを表示</Link>\n          </span>\n        </h1>\n\n        <Posts className={styles.posts} posts={posts} />\n      </div>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, status: { eq: \"published\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            category\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 280, height: 140) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulArticle(limit: 2000, filter: { tags: { in: [$tag] } }) {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          description\n          slug\n          category\n          tags\n          date\n          hero {\n            title\n            description\n            sizes(maxWidth: 1440) {\n              ...GatsbyContentfulSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst Hero = ({ node, title }) => (\n  <div className={styles.root}>\n    <h1 className={styles.title}>\n      <Avatar />\n      <span>suzukalight.com</span>\n    </h1>\n    <small className={styles.caption}>まずは技術中心に</small>\n  </div>\n);\n\nexport default Hero;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport const Card = ({ children, className }) => (\n  <div className={cn(styles.root, className)}>{children}</div>\n);\n\nexport const CardImage = ({ children, className }) => (\n  <div className={cn(styles.image, className)}>{children}</div>\n);\n\nexport const CardBody = ({ children, className }) => (\n  <div className={cn(styles.body, className)}>{children}</div>\n);\n\nexport const CardTitle = ({ children, className }) => (\n  <h1 className={cn(styles.title, className)}>\n    <span className={styles.titleInner}>{children}</span>\n  </h1>\n);\n\nexport const CardDescription = ({ children, className }) => (\n  <div className={cn(styles.description, className)}>{children}</div>\n);\n\nexport const CardFooter = ({ children, className }) => (\n  <div className={cn(styles.footer, className)}>{children}</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport {\n  Card,\n  CardImage,\n  CardBody,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '../../atoms/Card';\nimport DateAndTags from '../../molecules/DateAndTags';\n\nimport { getFixedImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst PostCard = ({ className, post }) => (\n  <Card className={cn(styles.root, className)}>\n    <CardImage>\n      <Link className={styles.image} to={post.head.slug}>\n        {getFixedImage(post.head.hero)}\n      </Link>\n      <Link className={styles.category} to={`/categories/${kebabCase(post.head.category)}`}>\n        <span>{post.head.category}</span>\n      </Link>\n    </CardImage>\n\n    <CardBody>\n      <div className={styles.texts}>\n        <Link className={styles.link} to={post.head.slug}>\n          <CardTitle>{post.head.title}</CardTitle>\n          <CardDescription>\n            <p\n              className={styles.excerpt}\n              dangerouslySetInnerHTML={{\n                __html: post.head.description || post.head.excerpt,\n              }}\n            />\n          </CardDescription>\n        </Link>\n      </div>\n\n      <CardFooter>\n        <DateAndTags className={styles.tags} date={post.head.date} tags={post.head.tags} />\n      </CardFooter>\n    </CardBody>\n  </Card>\n);\n\nexport default PostCard;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport PostCard from '../../molecules/PostCard';\n\nimport styles from './index.module.scss';\n\nconst Posts = ({ className, posts }) => (\n  <section className={cn(styles.root, className)}>\n    {posts.map(post => (\n      <PostCard key={post.head.slug} post={post} />\n    ))}\n  </section>\n);\n\nexport default Posts;\n"],"sourceRoot":""}