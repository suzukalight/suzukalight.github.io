{"version":3,"sources":["webpack:///./src/components/templates/Tags/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_Layout__WEBPACK_IMPORTED_MODULE_3__","_atoms_Seo__WEBPACK_IMPORTED_MODULE_4__","Tags","_ref","location","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","siteTitle","site","siteMetadata","title","a","createElement","map","_ref2","_ref2$node","node","slug","fields","frontmatter","key","to","propTypes","PropTypes","object","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Seo","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","gatsby__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","HeaderLink","className","styles","siteName","Header","headerBig","headerSmall","Layout","_ref3","children","root"],"mappings":"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","file":"component---src-components-templates-tags-index-js-b5ed94fd9c621f789661.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../Layout';\nimport Seo from '../../atoms/Seo';\n\nconst Tags = ({ location, pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`;\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={tagHeader} />\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node: { fields: { slug }, frontmatter: { title } } }) => (\n          <li key={slug}>\n            <Link to={slug}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n      <p>\n        <Link to=\"/tags\">All tags</Link>\n      </p>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport styles from './index.module.scss';\n\nconst HeaderLink = ({ title }) => (\n  <Link className={styles.siteName} to={`/`}>\n    {title}\n  </Link>\n);\n\nconst Header = ({ location, title }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n\n  return location.pathname === rootPath ? (\n    <header>\n      <h1 className={styles.headerBig}>\n        <HeaderLink title={title} />\n      </h1>\n    </header>\n  ) : (\n    <header>\n      <h3 className={styles.headerSmall}>\n        <HeaderLink title={title} />\n      </h3>\n    </header>\n  );\n};\n\nconst Layout = ({ location, title, children }) => (\n  <div className={styles.root}>\n    <Header location={location} title={title} />\n    <main>{children}</main>\n    <footer>© 2019 by suzukalight</footer>\n  </div>\n);\n\nexport default Layout;\n"],"sourceRoot":""}