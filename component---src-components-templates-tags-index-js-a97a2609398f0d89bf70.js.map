{"version":3,"sources":["webpack:///./src/components/templates/Tags/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/atoms/Avatar/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/article.js","webpack:///./src/utils/dom.jsx","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js","webpack:///./src/components/molecules/Hero/index.js","webpack:///./src/components/atoms/Card/index.js","webpack:///./src/components/molecules/PostCard/index.js","webpack:///./src/components/molecules/Posts/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_Layout__WEBPACK_IMPORTED_MODULE_3__","_atoms_Seo__WEBPACK_IMPORTED_MODULE_4__","_molecules_Posts__WEBPACK_IMPORTED_MODULE_5__","_molecules_Hero__WEBPACK_IMPORTED_MODULE_6__","_utils_article__WEBPACK_IMPORTED_MODULE_7__","_index_module_scss__WEBPACK_IMPORTED_MODULE_8__","_index_module_scss__WEBPACK_IMPORTED_MODULE_8___default","Tags","_ref","location","pageContext","data","tag","_ref2","site","allMarkdownRemark","allContentfulArticle","tagHeader","totalCount","siteTitle","siteMetadata","title","posts","sortByDate","convertToArticles","a","createElement","className","styles","root","header","heading","allTags","to","propTypes","PropTypes","object","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","string","isRequired","func","m","module","exports","require","default","typography","Typography","GitHub","rhythm","scale","Avatar","_4202243309","author","react_default","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Seo","description","lang","meta","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","Header","social","headerInner","headerSiteTitle","siteName","headerSocials","socialItem","href","twitter","github","Footer","footer","footerInner","footerAvatar","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_3__","footerLink","footerCopyright","Centered","_ref3","children","centered","Layout","_ref4","_data$site$siteMetada","_public_static_d_3083137340_json__WEBPACK_IMPORTED_MODULE_0__","main","convertFromMarkdownToArticle","markdownRemark","html","frontmatter","fields","tableOfContents","excerpt","head","source","body","convertFromContentfulToArticle","contentfulArticle","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","slug","richTextJson","convertToArticle","articlesGitHub","edges","map","e","node","articlesContentful","sort","b","differenceInMilliseconds","date","getFluidImage","image","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","sizes","getFixedImage","Tag","gatsby_browser_entry","link","kebabCase","tags","cn","Tags_Tag","key","DateAndTags","format","atoms_Tags","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Hero","caption","Card","CardImage","CardBody","CardTitle","titleInner","CardDescription","_ref5","CardFooter","_ref6","PostCard","post","Card_Card","Card_CardImage","hero","category","Card_CardBody","texts","Card_CardTitle","Card_CardDescription","dangerouslySetInnerHTML","__html","Card_CardFooter","Posts","molecules_PostCard"],"mappings":"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","file":"component---src-components-templates-tags-index-js-a97a2609398f0d89bf70.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../Layout';\nimport Seo from '../../atoms/Seo';\nimport Posts from '../../molecules/Posts';\nimport Hero from '../../molecules/Hero';\n\nimport { convertToArticles, sortByDate } from '../../../utils/article';\n\nimport styles from './index.module.scss';\n\nconst Tags = ({ location, pageContext, data }) => {\n  const { tag } = pageContext;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n  const totalCount = allMarkdownRemark.totalCount + allContentfulArticle.totalCount;\n\n  const tagHeader = `\"${tag}\" に関する記事 (${totalCount}件)`;\n  const siteTitle = site.siteMetadata.title;\n  const posts = sortByDate(convertToArticles(data));\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={tagHeader} />\n\n      <div className={styles.root}>\n        <Hero />\n\n        <h1 className={styles.header}>\n          <span className={styles.heading}>{tagHeader}</span>\n          <span className={styles.allTags}>\n            <Link to=\"/tags\">すべてのタグを表示</Link>\n          </span>\n        </h1>\n\n        <Posts className={styles.posts} posts={posts} />\n      </div>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, status: { eq: \"published\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            category\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 280, height: 140) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulArticle(limit: 2000, filter: { tags: { in: [$tag] } }) {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          description\n          slug\n          category\n          tags\n          date\n          hero {\n            title\n            description\n            sizes(maxWidth: 1440) {\n              ...GatsbyContentfulSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nconst typography = new Typography(GitHub);\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nconst query = graphql`\n  query AvatarQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Avatar = () => {\n  const data = useStaticQuery(query);\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Image\n      fixed={data.avatar.childImageSharp.fixed}\n      alt={author}\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        minWidth: 50,\n        borderRadius: `100%`,\n      }}\n      imgStyle={{\n        borderRadius: `50%`,\n      }}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Link } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query LayoutQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = ({ title, social }) => (\n  <header className={styles.header}>\n    <div className={styles.headerInner}>\n      <h3 className={styles.headerSiteTitle}>\n        <Link className={styles.siteName} to={`/`}>\n          {title}\n        </Link>\n      </h3>\n      <ul className={styles.headerSocials}>\n        <li className={styles.socialItem}>\n          <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n        </li>\n        <li className={styles.socialItem}>\n          <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n\nexport const Footer = ({ author }) => (\n  <footer className={styles.footer}>\n    <div className={styles.footerInner}>\n      <div className={styles.footerAvatar}>\n        <Avatar />\n        <Link to=\"/\" className={styles.footerLink}>\n          suzukalight.com\n        </Link>\n      </div>\n      <p className={styles.footerCopyright}>{`© 2019 by ${author}`}</p>\n    </div>\n  </footer>\n);\n\nexport const Centered = ({ children }) => <div className={styles.centered}>{children}</div>;\n\nexport const Layout = ({ location, title, children }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Header location={location} title={title} social={social} />\n      <main className={styles.main}>{children}</main>\n      <Footer author={author} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import differenceInMilliseconds from 'date-fns/difference_in_milliseconds';\n\nexport const convertFromMarkdownToArticle = data => {\n  const { site, markdownRemark } = data || {};\n  const { html, frontmatter, fields, tableOfContents, excerpt } = markdownRemark;\n  const description = frontmatter.description || frontmatter.excerpt;\n\n  return {\n    head: {\n      ...frontmatter,\n      ...fields,\n      tableOfContents,\n      excerpt,\n      description,\n      source: 'github',\n    },\n    body: html,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertFromContentfulToArticle = data => {\n  const { site, contentfulArticle } = data || {};\n  const { body, ...head } = contentfulArticle;\n  const description = head.description || head.excerpt;\n\n  return {\n    head: {\n      ...head,\n      description,\n      source: 'contentful',\n      slug: `/${head.slug}/`,\n    },\n    richTextJson: (body || {}).json,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertToArticle = data => {\n  if (!data) return null;\n  if (data.markdownRemark) return convertFromMarkdownToArticle(data);\n  if (data.contentfulArticle) return convertFromContentfulToArticle(data);\n  return null;\n};\n\nexport const convertToArticles = data => {\n  if (!data) return null;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n\n  const articlesGitHub = ((allMarkdownRemark || {}).edges || []).map(e =>\n    convertFromMarkdownToArticle({ site, markdownRemark: e.node }),\n  );\n  const articlesContentful = ((allContentfulArticle || {}).edges || []).map(e =>\n    convertFromContentfulToArticle({ site, contentfulArticle: e.node }),\n  );\n\n  return [...articlesGitHub, ...articlesContentful];\n};\n\nexport const sortByDate = data =>\n  data.sort((a, b) =>\n    differenceInMilliseconds(((b || {}).head || {}).date, ((a || {}).head || {}).date),\n  );\n","import React from 'react';\nimport Image from 'gatsby-image';\n\nexport const getFluidImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fluid={image.childImageSharp.fluid} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n\nexport const getFixedImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fixed={image.childImageSharp.fixed} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ className, tags }) => (\n  <ul className={cn(styles.tags, className)}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport cn from 'classnames';\nimport format from 'date-fns/format';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ className, date, tags }) => (\n  <div className={cn(styles.root, className)}>\n    <small className={styles.date}>{format(date, 'YYYY/M/D')}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n","import React from 'react';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst Hero = ({ node, title }) => (\n  <div className={styles.root}>\n    <h1 className={styles.title}>\n      <Avatar />\n      <span>suzukalight.com</span>\n    </h1>\n    <small className={styles.caption}>まずは技術中心に</small>\n  </div>\n);\n\nexport default Hero;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport const Card = ({ children, className }) => (\n  <div className={cn(styles.root, className)}>{children}</div>\n);\n\nexport const CardImage = ({ children, className }) => (\n  <div className={cn(styles.image, className)}>{children}</div>\n);\n\nexport const CardBody = ({ children, className }) => (\n  <div className={cn(styles.body, className)}>{children}</div>\n);\n\nexport const CardTitle = ({ children, className }) => (\n  <h1 className={cn(styles.title, className)}>\n    <span className={styles.titleInner}>{children}</span>\n  </h1>\n);\n\nexport const CardDescription = ({ children, className }) => (\n  <div className={cn(styles.description, className)}>{children}</div>\n);\n\nexport const CardFooter = ({ children, className }) => (\n  <div className={cn(styles.footer, className)}>{children}</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport {\n  Card,\n  CardImage,\n  CardBody,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '../../atoms/Card';\nimport DateAndTags from '../../molecules/DateAndTags';\n\nimport { getFixedImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst PostCard = ({ className, post }) => (\n  <Card className={cn(styles.root, className)}>\n    <CardImage>\n      <Link className={styles.image} to={post.head.slug}>\n        {getFixedImage(post.head.hero)}\n      </Link>\n      <Link className={styles.category} to={`/categories/${kebabCase(post.head.category)}`}>\n        <span>{post.head.category}</span>\n      </Link>\n    </CardImage>\n\n    <CardBody>\n      <div className={styles.texts}>\n        <Link className={styles.link} to={post.head.slug}>\n          <CardTitle>{post.head.title}</CardTitle>\n          <CardDescription>\n            <p\n              className={styles.excerpt}\n              dangerouslySetInnerHTML={{\n                __html: post.head.description || post.head.excerpt,\n              }}\n            />\n          </CardDescription>\n        </Link>\n      </div>\n\n      <CardFooter>\n        <DateAndTags className={styles.tags} date={post.head.date} tags={post.head.tags} />\n      </CardFooter>\n    </CardBody>\n  </Card>\n);\n\nexport default PostCard;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport PostCard from '../../molecules/PostCard';\n\nimport styles from './index.module.scss';\n\nconst Posts = ({ className, posts }) => (\n  <section className={cn(styles.root, className)}>\n    {posts.map(post => (\n      <PostCard key={post.head.slug} post={post} />\n    ))}\n  </section>\n);\n\nexport default Posts;\n"],"sourceRoot":""}