{"version":3,"sources":["webpack:///./src/components/pages/Root/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/atoms/Avatar/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/article.js","webpack:///./src/utils/dom.jsx","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js","webpack:///./src/components/molecules/Hero/index.js","webpack:///./src/components/atoms/Card/index.js","webpack:///./src/components/molecules/PostCard/index.js","webpack:///./src/components/molecules/Posts/index.js"],"names":["IndexPage","_ref","location","siteMetadata","posts","react_default","a","createElement","Layout","title","Seo","description","className","styles","root","Hero","Posts","__webpack_require__","d","__webpack_exports__","pageQuery","data","pageContext","sortByDate","convertToArticles","Root","site","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography","Typography","GitHub","rhythm","scale","Avatar","_4202243309","author","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","lang","meta","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","metaData","name","content","property","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","Header","social","header","headerInner","headerSiteTitle","gatsby__WEBPACK_IMPORTED_MODULE_2__","siteName","to","headerSocials","socialItem","href","twitter","github","Footer","_ref2","footer","footerInner","footerAvatar","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_3__","footerLink","footerCopyright","Centered","_ref3","children","centered","_ref4","_data$site$siteMetada","_public_static_d_3083137340_json__WEBPACK_IMPORTED_MODULE_0__","main","convertFromMarkdownToArticle","markdownRemark","html","frontmatter","fields","tableOfContents","excerpt","head","source","body","convertFromContentfulToArticle","contentfulArticle","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","slug","richTextJson","convertToArticle","allMarkdownRemark","allContentfulArticle","articlesGitHub","edges","map","e","node","articlesContentful","sort","b","differenceInMilliseconds","date","getFluidImage","image","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","sizes","getFixedImage","Tag","tag","gatsby_browser_entry","link","kebabCase","Tags","tags","cn","Tags_Tag","key","DateAndTags","format","atoms_Tags","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_1__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2__","_index_module_scss__WEBPACK_IMPORTED_MODULE_2___default","caption","Card","CardImage","CardBody","CardTitle","titleInner","CardDescription","_ref5","CardFooter","_ref6","PostCard","post","Card_Card","Card_CardImage","hero","category","Card_CardBody","texts","Card_CardTitle","Card_CardDescription","dangerouslySetInnerHTML","__html","Card_CardFooter","molecules_PostCard"],"mappings":"4KAoBeA,EAXG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,aAAcC,EAA3BH,EAA2BG,MAA3B,OAChBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQN,SAAUA,EAAUO,MAAON,EAAaM,OAC9CJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKD,MAAM,QAAQE,YAAY,kBAE/BN,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAOC,MACrBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOZ,MAAOA,gBCfpBa,EAAAC,EAAAC,EAAA,8BAAAC,IAaepB,UANG,SAAAC,GAA2B,IAAxBoB,EAAwBpB,EAAxBoB,KAAMC,EAAkBrB,EAAlBqB,YACnBlB,EAAQmB,YAAWC,YAAkBH,IAE3C,OAAOhB,EAAAC,EAAAC,cAACkB,EAAD,CAAMtB,aAAckB,EAAKK,KAAKvB,aAAcC,MAAOA,EAAOkB,YAAaA,KAHhF,IAQaF,EAAS,+CCftB,IAAAO,EAAAV,EAAA,GAAAW,EAAAX,EAAAY,EAAAF,GAAAG,EAAAb,EAAA,GAAAc,EAAAd,EAAAY,EAAAC,GAAAE,EAAAf,EAAA,IAAAgB,EAAAhB,EAAAY,EAAAG,GAAAf,EAAAC,EAAAC,EAAA,sBAAAc,EAAA3B,IAAAW,EAAA,KAa2BiB,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BCvEtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8HCGzCK,EAAa,IAAIC,IAAWC,KAGrBC,EAASH,EAAWG,OACZH,EAAWI,MCyCjBC,IArBA,WACb,IAAM9B,EAAO+B,EAAA/B,KACLgC,EAAWhC,EAAKK,KAAKvB,aAArBkD,OAER,OACEhD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,MAAOlC,EAAKmC,OAAOC,gBAAgBF,MACnCG,IAAKL,EACLM,MAAO,CACLC,YAAaX,EAAO,IACpBY,aAAc,EACdC,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,qGCrCdE,EAAmB,SAAAhE,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUgE,EAAoBjE,EAApBiE,cACpC,OAAKA,EAGEhC,IAAM3B,cAAc4D,IAApBC,OAAAC,OAAA,CACLnE,WACAgE,iBACGA,EAAcI,OALV,MASXL,EAAiBM,UAAY,CAC3BrE,SAAUkC,IAAUoC,MAAM,CACxBC,SAAUrC,IAAUE,OAAOC,aAC1BA,YAGU0B,6GCLf,SAASvD,EAATT,GAAiD,IAAlCU,EAAkCV,EAAlCU,YAAa+D,EAAqBzE,EAArByE,KAAMC,EAAe1E,EAAf0E,KAAMlE,EAASR,EAATQ,MAE9BN,EADKyE,EAAAvD,KACiBK,KAAtBvB,aACF0E,EAAkBlE,GAAeR,EAAaQ,YAC9CmE,EAAW,CACf,CAAEC,KAAI,cAAiBC,QAASH,GAChC,CAAEI,SAAQ,WAAcD,QAASvE,GACjC,CAAEwE,SAAQ,iBAAoBD,QAASH,GACvC,CAAEI,SAAQ,UAAaD,QAAO,WAC9B,CAAED,KAAI,eAAkBC,QAAO,WAC/B,CAAED,KAAI,kBAAqBC,QAAS7E,EAAakD,QACjD,CAAE0B,KAAI,gBAAmBC,QAASvE,GAClC,CAAEsE,KAAI,sBAAyBC,QAASH,IACxCK,OAAOP,GAET,OACEQ,EAAA7E,EAAAC,cAAC6E,EAAA9E,EAAD,CACE+E,eAAgB,CAAEX,QAClBjE,MAAOA,EACP6E,cAAa,QAAUnF,EAAaM,MACpCkE,KAAMG,IAKZpE,EAAI6E,aAAe,CACjBb,KAAI,KACJC,KAAM,GACNhE,YAAW,IAGbD,EAAI6D,UAAY,CACd5D,YAAayB,IAAUE,OACvBoC,KAAMtC,IAAUE,OAChBqC,KAAMvC,IAAUoD,QAAQpD,IAAUC,QAClC5B,MAAO2B,IAAUE,OAAOC,YAGX7B,+sDCjCF+E,EAAS,SAAAxF,GAAA,IAAGQ,EAAHR,EAAGQ,MAAOiF,EAAVzF,EAAUyF,OAAV,OACpBP,EAAA7E,EAAAC,cAAA,UAAQK,UAAWC,IAAO8E,QACxBR,EAAA7E,EAAAC,cAAA,OAAKK,UAAWC,IAAO+E,aACrBT,EAAA7E,EAAAC,cAAA,MAAIK,UAAWC,IAAOgF,iBACpBV,EAAA7E,EAAAC,cAACuF,EAAA,EAAD,CAAMlF,UAAWC,IAAOkF,SAAUC,GAAE,KACjCvF,IAGL0E,EAAA7E,EAAAC,cAAA,MAAIK,UAAWC,IAAOoF,eACpBd,EAAA7E,EAAAC,cAAA,MAAIK,UAAWC,IAAOqF,YACpBf,EAAA7E,EAAAC,cAAA,KAAG4F,KAAI,sBAAwBT,EAAOU,SAAtC,WAEFjB,EAAA7E,EAAAC,cAAA,MAAIK,UAAWC,IAAOqF,YACpBf,EAAA7E,EAAAC,cAAA,KAAG4F,KAAI,uBAAyBT,EAAOW,QAAvC,gBAOGC,EAAS,SAAAC,GAAA,IAAGlD,EAAHkD,EAAGlD,OAAH,OACpB8B,EAAA7E,EAAAC,cAAA,UAAQK,UAAWC,IAAO2F,QACxBrB,EAAA7E,EAAAC,cAAA,OAAKK,UAAWC,IAAO4F,aACrBtB,EAAA7E,EAAAC,cAAA,OAAKK,UAAWC,IAAO6F,cACrBvB,EAAA7E,EAAAC,cAACoG,EAAA,EAAD,MACAxB,EAAA7E,EAAAC,cAACuF,EAAA,EAAD,CAAME,GAAG,IAAIpF,UAAWC,IAAO+F,YAA/B,oBAIFzB,EAAA7E,EAAAC,cAAA,KAAGK,UAAWC,IAAOgG,iBAArB,aAAoDxD,MAK7CyD,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkB7B,EAAA7E,EAAAC,cAAA,OAAKK,UAAWC,IAAOoG,UAAWD,IAE/DxG,EAAS,SAAA0G,GAAmC,IAAhChH,EAAgCgH,EAAhChH,SAAUO,EAAsByG,EAAtBzG,MAAOuG,EAAeE,EAAfF,SAAeG,EAC1CC,EAAA/F,KACmBK,KAAKvB,aAA7BkD,EAF+C8D,EAE/C9D,OAAQqC,EAFuCyB,EAEvCzB,OAEhB,OACEP,EAAA7E,EAAAC,cAAA,OAAKK,UAAWC,IAAOC,MACrBqE,EAAA7E,EAAAC,cAACkF,EAAD,CAAQvF,SAAUA,EAAUO,MAAOA,EAAOiF,OAAQA,IAClDP,EAAA7E,EAAAC,cAAA,QAAMK,UAAWC,IAAOwG,MAAOL,GAC/B7B,EAAA7E,EAAAC,cAAC+F,EAAD,CAAQjD,OAAQA,MAKP7C,iUCrEF8G,EAA+B,SAAAjG,GAAQ,IAAApB,EACjBoB,GAAQ,GAAjCK,EAD0CzB,EAC1CyB,KAAM6F,EADoCtH,EACpCsH,eACNC,EAAwDD,EAAxDC,KAAMC,EAAkDF,EAAlDE,YAAaC,EAAqCH,EAArCG,OAAQC,EAA6BJ,EAA7BI,gBAAiBC,EAAYL,EAAZK,QAC9CjH,EAAc8G,EAAY9G,aAAe8G,EAAYG,QAE3D,MAAO,CACLC,KAAIzD,OAAAC,OAAA,GACCoD,EACAC,EAFD,CAGFC,kBACAC,UACAjH,cACAmH,OAAQ,WAEVC,KAAMP,EACNrH,aAAcuB,EAAKvB,eAIV6H,EAAiC,SAAA3G,GAAQ,IAAAkF,EAChBlF,GAAQ,GAApCK,EAD4C6E,EAC5C7E,KAAMuG,EADsC1B,EACtC0B,kBACNF,EAAkBE,EAAlBF,KAASF,EAFmCK,IAE1BD,EAF0B,UAG9CtH,EAAckH,EAAKlH,aAAekH,EAAKD,QAE7C,MAAO,CACLC,KAAIzD,OAAAC,OAAA,GACCwD,EADD,CAEFlH,cACAmH,OAAQ,aACRK,KAAI,IAAMN,EAAKM,KAAX,MAENC,cAAeL,GAAQ,IAAIzD,KAC3BnE,aAAcuB,EAAKvB,eAIVkI,EAAmB,SAAAhH,GAC9B,OAAKA,EACDA,EAAKkG,eAAuBD,EAA6BjG,GACzDA,EAAK4G,kBAA0BD,EAA+B3G,GAC3D,KAHW,MAMPG,EAAoB,SAAAH,GAC/B,IAAKA,EAAM,OAAO,KADqB,IAAA0F,EAEmB1F,GAAQ,GAA1DK,EAF+BqF,EAE/BrF,KAAM4G,EAFyBvB,EAEzBuB,kBAAmBC,EAFMxB,EAENwB,qBAE3BC,IAAmBF,GAAqB,IAAIG,OAAS,IAAIC,IAAI,SAAAC,GAAC,OAClErB,EAA6B,CAAE5F,OAAM6F,eAAgBoB,EAAEC,SAEnDC,IAAuBN,GAAwB,IAAIE,OAAS,IAAIC,IAAI,SAAAC,GAAC,OACzEX,EAA+B,CAAEtG,OAAMuG,kBAAmBU,EAAEC,SAG9D,SAAA1D,OAAWsD,EAAmBK,IAGnBtH,EAAa,SAAAF,GAAI,OAC5BA,EAAKyH,KAAK,SAACxI,EAAGyI,GAAJ,OACRC,MAA2BD,GAAK,IAAIlB,MAAQ,IAAIoB,OAAQ3I,GAAK,IAAIuH,MAAQ,IAAIoB,wJC1DpEC,EAAgB,SAAAC,GAC3B,OAAKA,EACDA,GAASA,EAAM1F,gBAAwB0B,EAAA7E,EAAAC,cAAC6I,EAAA9I,EAAD,CAAO+I,MAAOF,EAAM1F,gBAAgB4F,QAC3EF,GAASA,EAAMG,MAAcnE,EAAA7E,EAAAC,cAAC6I,EAAA9I,EAAD,CAAO+I,MAAOF,EAAMG,QAC9C,KAHY,MAMRC,EAAgB,SAAAJ,GAC3B,OAAKA,EACDA,GAASA,EAAM1F,gBAAwB0B,EAAA7E,EAAAC,cAAC6I,EAAA9I,EAAD,CAAOiD,MAAO4F,EAAM1F,gBAAgBF,QAC3E4F,GAASA,EAAMG,MAAcnE,EAAA7E,EAAAC,cAAC6I,EAAA9I,EAAD,CAAO+I,MAAOF,EAAMG,QAC9C,KAHY,sJCJfE,EAAM,SAAAvJ,GAAA,IAAGwJ,EAAHxJ,EAAGwJ,IAAH,OACVpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAM9I,UAAWC,IAAO8I,KAAM3D,GAAE,SAAW4D,IAAUH,GAArB,KAC9BpJ,EAAAC,EAAAC,cAAA,MAAIK,UAAWC,IAAO4I,KAAMA,KAYjBI,EARF,SAAAtD,GAAA,IAAG3F,EAAH2F,EAAG3F,UAAWkJ,EAAdvD,EAAcuD,KAAd,OACXzJ,EAAAC,EAAAC,cAAA,MAAIK,UAAWmJ,IAAGlJ,IAAOiJ,KAAMlJ,KAC3BkJ,GAAQ,IAAIpB,IAAI,SAAAe,GAAG,OACnBpJ,EAAAC,EAAAC,cAACyJ,EAAD,CAAKC,IAAKR,EAAKA,IAAKA,0BCDXS,IAPK,SAAAjK,GAAA,IAAGW,EAAHX,EAAGW,UAAWqI,EAAdhJ,EAAcgJ,KAAMa,EAApB7J,EAAoB6J,KAApB,OAClBzJ,EAAAC,EAAAC,cAAA,OAAKK,UAAWmJ,IAAGlJ,IAAOC,KAAMF,IAC9BP,EAAAC,EAAAC,cAAA,SAAOK,UAAWC,IAAOoI,MAAOkB,IAAOlB,EAAM,aAC7C5I,EAAAC,EAAAC,cAAC6J,EAAD,CAAMxJ,UAAWC,IAAOiJ,KAAMA,KAAMA,wCCXxC,IAAAnI,EAAAV,EAAA,GAAAW,EAAAX,EAAAY,EAAAF,GAAA0I,EAAApJ,EAAA,KAAAqJ,EAAArJ,EAAA,KAAAsJ,EAAAtJ,EAAAY,EAAAyI,GAgBevJ,IAVF,SAAAd,KAAG2I,KAAH3I,EAASQ,MAAT,OACXmB,EAAAtB,EAAAC,cAAA,OAAKK,UAAWC,IAAOC,MACrBc,EAAAtB,EAAAC,cAAA,MAAIK,UAAWC,IAAOJ,OACpBmB,EAAAtB,EAAAC,cAAC8J,EAAA,EAAD,MACAzI,EAAAtB,EAAAC,cAAA,gCAEFqB,EAAAtB,EAAAC,cAAA,SAAOK,UAAWC,IAAO2J,SAAzB,4ICPSC,EAAO,SAAAxK,GAAA,IAAG+G,EAAH/G,EAAG+G,SAAUpG,EAAbX,EAAaW,UAAb,OAClBP,EAAAC,EAAAC,cAAA,OAAKK,UAAWmJ,IAAGlJ,IAAOC,KAAMF,IAAaoG,IAGlC0D,EAAY,SAAAnE,GAAA,IAAGS,EAAHT,EAAGS,SAAUpG,EAAb2F,EAAa3F,UAAb,OACvBP,EAAAC,EAAAC,cAAA,OAAKK,UAAWmJ,IAAGlJ,IAAOsI,MAAOvI,IAAaoG,IAGnC2D,EAAW,SAAA5D,GAAA,IAAGC,EAAHD,EAAGC,SAAUpG,EAAbmG,EAAanG,UAAb,OACtBP,EAAAC,EAAAC,cAAA,OAAKK,UAAWmJ,IAAGlJ,IAAOkH,KAAMnH,IAAaoG,IAGlC4D,EAAY,SAAA1D,GAAA,IAAGF,EAAHE,EAAGF,SAAUpG,EAAbsG,EAAatG,UAAb,OACvBP,EAAAC,EAAAC,cAAA,MAAIK,UAAWmJ,IAAGlJ,IAAOJ,MAAOG,IAC9BP,EAAAC,EAAAC,cAAA,QAAMK,UAAWC,IAAOgK,YAAa7D,KAI5B8D,EAAkB,SAAAC,GAAA,IAAG/D,EAAH+D,EAAG/D,SAAUpG,EAAbmK,EAAanK,UAAb,OAC7BP,EAAAC,EAAAC,cAAA,OAAKK,UAAWmJ,IAAGlJ,IAAOF,YAAaC,IAAaoG,IAGzCgE,EAAa,SAAAC,GAAA,IAAGjE,EAAHiE,EAAGjE,SAAUpG,EAAbqK,EAAarK,UAAb,OACxBP,EAAAC,EAAAC,cAAA,OAAKK,UAAWmJ,IAAGlJ,IAAO2F,OAAQ5F,IAAaoG,wCCwBlCkE,EAjCE,SAAAjL,GAAA,IAAGW,EAAHX,EAAGW,UAAWuK,EAAdlL,EAAckL,KAAd,OACf9K,EAAAC,EAAAC,cAAC6K,EAAD,CAAMxK,UAAWmJ,IAAGlJ,IAAOC,KAAMF,IAC/BP,EAAAC,EAAAC,cAAC8K,EAAD,KACEhL,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAM9I,UAAWC,IAAOsI,MAAOnD,GAAImF,EAAKtD,KAAKM,MAC1CoB,YAAc4B,EAAKtD,KAAKyD,OAE3BjL,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAM9I,UAAWC,IAAO0K,SAAUvF,GAAE,eAAiB4D,IAAUuB,EAAKtD,KAAK0D,WACvElL,EAAAC,EAAAC,cAAA,YAAO4K,EAAKtD,KAAK0D,YAIrBlL,EAAAC,EAAAC,cAACiL,EAAD,KACEnL,EAAAC,EAAAC,cAAA,OAAKK,UAAWC,IAAO4K,OACrBpL,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAM9I,UAAWC,IAAO8I,KAAM3D,GAAImF,EAAKtD,KAAKM,MAC1C9H,EAAAC,EAAAC,cAACmL,EAAD,KAAYP,EAAKtD,KAAKpH,OACtBJ,EAAAC,EAAAC,cAACoL,EAAD,KACEtL,EAAAC,EAAAC,cAAA,KACEK,UAAWC,IAAO+G,QAClBgE,wBAAyB,CACvBC,OAAQV,EAAKtD,KAAKlH,aAAewK,EAAKtD,KAAKD,cAOrDvH,EAAAC,EAAAC,cAACuL,EAAD,KACEzL,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAatJ,UAAWC,IAAOiJ,KAAMb,KAAMkC,EAAKtD,KAAKoB,KAAMa,KAAMqB,EAAKtD,KAAKiC,6BC/BpE9I,IARD,SAAAf,GAAA,IAAGW,EAAHX,EAAGW,UAAWR,EAAdH,EAAcG,MAAd,OACZC,EAAAC,EAAAC,cAAA,WAASK,UAAWmJ,IAAGlJ,IAAOC,KAAMF,IACjCR,EAAMsI,IAAI,SAAAyC,GAAI,OACb9K,EAAAC,EAAAC,cAACwL,EAAD,CAAU9B,IAAKkB,EAAKtD,KAAKM,KAAMgD,KAAMA","file":"component---src-pages-index-js-0e8d9dfccb8b7dfbf900.js","sourcesContent":["import React from 'react';\n\nimport Seo from '../../atoms/Seo';\nimport Hero from '../../molecules/Hero';\nimport Posts from '../../molecules/Posts';\nimport Layout from '../../templates/Layout';\n\nimport styles from './index.module.scss';\n\nconst IndexPage = ({ location, siteMetadata, posts }) => (\n  <Layout location={location} title={siteMetadata.title}>\n    <Seo title=\"Index\" description=\"なければ作ればいいじゃない\" />\n\n    <div className={styles.root}>\n      <Hero />\n      <Posts posts={posts} />\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Root from '../components/pages/Root';\n\nimport { convertToArticles, sortByDate } from '../utils/article';\n\nconst IndexPage = ({ data, pageContext }) => {\n  const posts = sortByDate(convertToArticles(data));\n\n  return <Root siteMetadata={data.site.siteMetadata} posts={posts} pageContext={pageContext} />;\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { status: { eq: \"published\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            description\n            category\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 280, height: 140) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allContentfulArticle {\n      edges {\n        node {\n          id\n          title\n          description\n          slug\n          category\n          tags\n          date\n          hero {\n            title\n            description\n            sizes(maxWidth: 1440) {\n              ...GatsbyContentfulSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nconst typography = new Typography(GitHub);\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nconst query = graphql`\n  query AvatarQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Avatar = () => {\n  const data = useStaticQuery(query);\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Image\n      fixed={data.avatar.childImageSharp.fixed}\n      alt={author}\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        minWidth: 50,\n        borderRadius: `100%`,\n      }}\n      imgStyle={{\n        borderRadius: `50%`,\n      }}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site;\n  const metaDescription = description || siteMetadata.description;\n  const metaData = [\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: title },\n    { property: `og:description`, content: metaDescription },\n    { property: `og:type`, content: `website` },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: siteMetadata.author },\n    { name: `twitter:title`, content: title },\n    { name: `twitter:description`, content: metaDescription },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Link } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query LayoutQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = ({ title, social }) => (\n  <header className={styles.header}>\n    <div className={styles.headerInner}>\n      <h3 className={styles.headerSiteTitle}>\n        <Link className={styles.siteName} to={`/`}>\n          {title}\n        </Link>\n      </h3>\n      <ul className={styles.headerSocials}>\n        <li className={styles.socialItem}>\n          <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n        </li>\n        <li className={styles.socialItem}>\n          <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n\nexport const Footer = ({ author }) => (\n  <footer className={styles.footer}>\n    <div className={styles.footerInner}>\n      <div className={styles.footerAvatar}>\n        <Avatar />\n        <Link to=\"/\" className={styles.footerLink}>\n          suzukalight.com\n        </Link>\n      </div>\n      <p className={styles.footerCopyright}>{`© 2019 by ${author}`}</p>\n    </div>\n  </footer>\n);\n\nexport const Centered = ({ children }) => <div className={styles.centered}>{children}</div>;\n\nexport const Layout = ({ location, title, children }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Header location={location} title={title} social={social} />\n      <main className={styles.main}>{children}</main>\n      <Footer author={author} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import differenceInMilliseconds from 'date-fns/difference_in_milliseconds';\n\nexport const convertFromMarkdownToArticle = data => {\n  const { site, markdownRemark } = data || {};\n  const { html, frontmatter, fields, tableOfContents, excerpt } = markdownRemark;\n  const description = frontmatter.description || frontmatter.excerpt;\n\n  return {\n    head: {\n      ...frontmatter,\n      ...fields,\n      tableOfContents,\n      excerpt,\n      description,\n      source: 'github',\n    },\n    body: html,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertFromContentfulToArticle = data => {\n  const { site, contentfulArticle } = data || {};\n  const { body, ...head } = contentfulArticle;\n  const description = head.description || head.excerpt;\n\n  return {\n    head: {\n      ...head,\n      description,\n      source: 'contentful',\n      slug: `/${head.slug}/`,\n    },\n    richTextJson: (body || {}).json,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertToArticle = data => {\n  if (!data) return null;\n  if (data.markdownRemark) return convertFromMarkdownToArticle(data);\n  if (data.contentfulArticle) return convertFromContentfulToArticle(data);\n  return null;\n};\n\nexport const convertToArticles = data => {\n  if (!data) return null;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n\n  const articlesGitHub = ((allMarkdownRemark || {}).edges || []).map(e =>\n    convertFromMarkdownToArticle({ site, markdownRemark: e.node }),\n  );\n  const articlesContentful = ((allContentfulArticle || {}).edges || []).map(e =>\n    convertFromContentfulToArticle({ site, contentfulArticle: e.node }),\n  );\n\n  return [...articlesGitHub, ...articlesContentful];\n};\n\nexport const sortByDate = data =>\n  data.sort((a, b) =>\n    differenceInMilliseconds(((b || {}).head || {}).date, ((a || {}).head || {}).date),\n  );\n","import React from 'react';\nimport Image from 'gatsby-image';\n\nexport const getFluidImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fluid={image.childImageSharp.fluid} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n\nexport const getFixedImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fixed={image.childImageSharp.fixed} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ className, tags }) => (\n  <ul className={cn(styles.tags, className)}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport cn from 'classnames';\nimport format from 'date-fns/format';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ className, date, tags }) => (\n  <div className={cn(styles.root, className)}>\n    <small className={styles.date}>{format(date, 'YYYY/M/D')}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n","import React from 'react';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst Hero = ({ node, title }) => (\n  <div className={styles.root}>\n    <h1 className={styles.title}>\n      <Avatar />\n      <span>suzukalight.com</span>\n    </h1>\n    <small className={styles.caption}>まずは技術中心に</small>\n  </div>\n);\n\nexport default Hero;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport const Card = ({ children, className }) => (\n  <div className={cn(styles.root, className)}>{children}</div>\n);\n\nexport const CardImage = ({ children, className }) => (\n  <div className={cn(styles.image, className)}>{children}</div>\n);\n\nexport const CardBody = ({ children, className }) => (\n  <div className={cn(styles.body, className)}>{children}</div>\n);\n\nexport const CardTitle = ({ children, className }) => (\n  <h1 className={cn(styles.title, className)}>\n    <span className={styles.titleInner}>{children}</span>\n  </h1>\n);\n\nexport const CardDescription = ({ children, className }) => (\n  <div className={cn(styles.description, className)}>{children}</div>\n);\n\nexport const CardFooter = ({ children, className }) => (\n  <div className={cn(styles.footer, className)}>{children}</div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport {\n  Card,\n  CardImage,\n  CardBody,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '../../atoms/Card';\nimport DateAndTags from '../../molecules/DateAndTags';\n\nimport { getFixedImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst PostCard = ({ className, post }) => (\n  <Card className={cn(styles.root, className)}>\n    <CardImage>\n      <Link className={styles.image} to={post.head.slug}>\n        {getFixedImage(post.head.hero)}\n      </Link>\n      <Link className={styles.category} to={`/categories/${kebabCase(post.head.category)}`}>\n        <span>{post.head.category}</span>\n      </Link>\n    </CardImage>\n\n    <CardBody>\n      <div className={styles.texts}>\n        <Link className={styles.link} to={post.head.slug}>\n          <CardTitle>{post.head.title}</CardTitle>\n          <CardDescription>\n            <p\n              className={styles.excerpt}\n              dangerouslySetInnerHTML={{\n                __html: post.head.description || post.head.excerpt,\n              }}\n            />\n          </CardDescription>\n        </Link>\n      </div>\n\n      <CardFooter>\n        <DateAndTags className={styles.tags} date={post.head.date} tags={post.head.tags} />\n      </CardFooter>\n    </CardBody>\n  </Card>\n);\n\nexport default PostCard;\n","import React from 'react';\nimport cn from 'classnames';\n\nimport PostCard from '../../molecules/PostCard';\n\nimport styles from './index.module.scss';\n\nconst Posts = ({ className, posts }) => (\n  <section className={cn(styles.root, className)}>\n    {posts.map(post => (\n      <PostCard key={post.head.slug} post={post} />\n    ))}\n  </section>\n);\n\nexport default Posts;\n"],"sourceRoot":""}