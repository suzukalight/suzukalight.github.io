{"version":3,"sources":["webpack:///./src/components/templates/Categories/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_Layout__WEBPACK_IMPORTED_MODULE_3__","_atoms_Seo__WEBPACK_IMPORTED_MODULE_4__","_molecules_Posts__WEBPACK_IMPORTED_MODULE_5__","_molecules_Hero__WEBPACK_IMPORTED_MODULE_6__","_index_module_scss__WEBPACK_IMPORTED_MODULE_7__","_index_module_scss__WEBPACK_IMPORTED_MODULE_7___default","Categories","_ref","location","pageContext","data","category","_data$allMarkdownRema","allMarkdownRemark","edges","categoryHeader","totalCount","siteTitle","site","siteMetadata","title","a","createElement","className","styles","root","header","heading","allCategories","to","posts","propTypes","PropTypes","object"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAO,EAAAQ,GAWME,EAAa,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,YAAaC,EAAWH,EAAXG,KACnCC,EAAaF,EAAbE,SAD8CC,EAExBF,EAAKG,kBAA3BC,EAF8CF,EAE9CE,MACFC,EAAc,IAAOJ,EAAP,aAHkCC,EAEvCI,WACK,KACdC,EAAYP,EAAKQ,KAAKC,aAAaC,MAEzC,OACEzB,EAAA0B,EAAAC,cAACtB,EAAA,EAAD,CAAQQ,SAAUA,EAAUY,MAAOH,GACjCtB,EAAA0B,EAAAC,cAACrB,EAAA,EAAD,CAAKmB,MAAOL,IAEZpB,EAAA0B,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,MACrB9B,EAAA0B,EAAAC,cAACnB,EAAA,EAAD,MAEAR,EAAA0B,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,QACpB/B,EAAA0B,EAAAC,cAAA,QAAMC,UAAWC,IAAOG,SAAUZ,GAClCpB,EAAA0B,EAAAC,cAAA,QAAMC,UAAWC,IAAOI,eACtBjC,EAAA0B,EAAAC,cAACvB,EAAA,EAAD,CAAM8B,GAAG,eAAT,iBAIJlC,EAAA0B,EAAAC,cAACpB,EAAA,EAAD,CAAOqB,UAAWC,IAAOM,MAAOA,MAAOhB,OAM/CR,EAAWyB,UAAY,CACrBtB,YAAauB,IAAUC,OACvBvB,KAAMsB,IAAUC,QAGH3B,YAER,IAAMb,EAAS","file":"component---src-components-templates-categories-index-js-0d8ed1bf7111acce00e2.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Layout from '../Layout';\r\nimport Seo from '../../atoms/Seo';\r\nimport Posts from '../../molecules/Posts';\r\nimport Hero from '../../molecules/Hero';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst Categories = ({ location, pageContext, data }) => {\r\n  const { category } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const categoryHeader = `\"${category}\" に関する記事 (${totalCount}件)`;\r\n  const siteTitle = data.site.siteMetadata.title;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title={categoryHeader} />\r\n\r\n      <div className={styles.root}>\r\n        <Hero />\r\n\r\n        <h1 className={styles.header}>\r\n          <span className={styles.heading}>{categoryHeader}</span>\r\n          <span className={styles.allCategories}>\r\n            <Link to=\"/categories\">すべてのカテゴリを表示</Link>\r\n          </span>\r\n        </h1>\r\n\r\n        <Posts className={styles.posts} posts={edges} />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nCategories.propTypes = {\r\n  pageContext: PropTypes.object,\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default Categories;\r\n\r\nexport const pageQuery = graphql`\r\n  query($category: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { in: [$category] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"YYYY/M/D\")\r\n            title\r\n            description\r\n            category\r\n            tags\r\n            hero {\r\n              childImageSharp {\r\n                fixed(width: 280, height: 140) {\r\n                  ...GatsbyImageSharpFixed\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}