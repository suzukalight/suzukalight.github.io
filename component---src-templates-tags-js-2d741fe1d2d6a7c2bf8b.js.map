{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","Tags","_ref","location","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","siteTitle","site","siteMetadata","title","a","createElement","map","_ref2","_ref2$node","node","slug","fields","frontmatter","key","to","propTypes","PropTypes","object","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Layout","render","header","_this$props","this","props","children","react__WEBPACK_IMPORTED_MODULE_2___default","style","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","Component","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-templates-tags-js-2d741fe1d2d6a7c2bf8b.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nconst Tags = ({ location, pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagHeader = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`;\r\n  const siteTitle = data.site.siteMetadata.title;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title={tagHeader} />\r\n      <h1>{tagHeader}</h1>\r\n      <ul>\r\n        {edges.map(({ node: { fields: { slug }, frontmatter: { title } } }) => (\r\n          <li key={slug}>\r\n            <Link to={slug}>{title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p>\r\n        <Link to=\"/tags\">All tags</Link>\r\n      </p>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.object,\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm, scale } from '../utils/typography';\n\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css';\nimport './layout.scss';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}