{"version":3,"sources":["webpack:///./src/components/templates/BlogPost/source-contentful.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/atoms/Avatar/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/Seo/index.js","webpack:///./src/components/templates/Layout/index.js","webpack:///./src/utils/article.js","webpack:///./src/utils/dom.jsx","webpack:///./src/components/atoms/Tags/index.js","webpack:///./src/components/molecules/DateAndTags/index.js","webpack:///./src/components/atoms/Iframely/index.js","webpack:///./src/components/molecules/Bio/index.js","webpack:///./src/components/molecules/SocialLinks/index.js","webpack:///./src/utils/contentful.jsx","webpack:///./src/components/templates/BlogPost/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","___WEBPACK_IMPORTED_MODULE_0__","BlogPost","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography","Typography","GitHub","rhythm","scale","Avatar","data","_4202243309","author","site","siteMetadata","react_default","createElement","gatsby_image_default","fixed","avatar","childImageSharp","alt","style","marginRight","marginBottom","minWidth","borderRadius","imgStyle","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Seo","description","lang","meta","title","image","_public_static_d_178359677_json__WEBPACK_IMPORTED_MODULE_0__","siteUrl","siteTitle","defaultImage","twitter","social","metaTitle","metaDescription","siteImage","metaData","name","content","property","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultProps","arrayOf","Header","className","styles","header","headerInner","headerSiteTitle","gatsby__WEBPACK_IMPORTED_MODULE_2__","siteName","to","headerSocials","socialItem","href","github","Footer","_ref2","footer","footerInner","footerAvatar","_atoms_Avatar__WEBPACK_IMPORTED_MODULE_3__","footerLink","footerCopyright","Centered","_ref3","children","centered","Layout","_ref4","_data$site$siteMetada","_public_static_d_3083137340_json__WEBPACK_IMPORTED_MODULE_0__","root","main","convertFromMarkdownToArticle","markdownRemark","html","frontmatter","fields","tableOfContents","excerpt","head","source","body","convertFromContentfulToArticle","contentfulArticle","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","slug","richTextJson","convertToArticle","convertToArticles","allMarkdownRemark","allContentfulArticle","articlesGitHub","edges","map","e","node","articlesContentful","sortByDate","sort","b","differenceInMilliseconds","date","getFluidImage","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","fluid","sizes","getFixedImage","Tag","tag","gatsby_browser_entry","link","kebabCase","Tags","tags","cn","Tags_Tag","key","DateAndTags","format","atoms_Tags","Iframely","componentDidMount","window","iframely","load","render","Helmet_default","type","src","charset","Component","Bio","_3616292556","username","SocialLinks","url","via","_1379133183","twitterAccount","fullUrl","item","FacebookShareButton","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","LineShareButton","LineIcon","PocketShareButton","PocketIcon","hatebu","data-hatena-bookmark-layout","data-hatena-bookmark-width","data-hatena-bookmark-height","hatebuImage","width","height","charSet","async","renderOptions","renderNode","_renderNode","BLOCKS","PARAGRAPH","_","EMBEDDED_ASSET","target","file","key1","keys","_file$key","contentType","split","Pager","previous","next","footerPager","pager","prev","rel","BlogPostTemplate","pageContext","get","Iframely_Iframely","hero","category","toc","tocHeader","tocBody","dangerouslySetInnerHTML","__html","article","documentToReactComponents","molecules_SocialLinks","socialLinks","molecules_Bio","bio","BlogPost_Pager","BlogPost_BlogPostTemplate"],"mappings":"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","file":"component---src-components-templates-blog-post-source-contentful-js-d45ced3373ede1beed32.js","sourcesContent":["import { graphql } from 'gatsby';\n\nimport BlogPost from './';\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n  query ContentfulBlogPostBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    contentfulArticle(id: { eq: $id }) {\n      id\n      slug\n      title\n      description\n      body {\n        json\n      }\n      date\n      category\n      tags\n      hero {\n        title\n        description\n        sizes(maxWidth: 1440) {\n          ...GatsbyContentfulSizes\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport GitHub from 'typography-theme-github';\n\nconst typography = new Typography(GitHub);\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../../../utils/typography';\n\nconst query = graphql`\n  query AvatarQuery {\n    avatar: file(absolutePath: { regex: \"/tarako.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Avatar = () => {\n  const data = useStaticQuery(query);\n  const { author } = data.site.siteMetadata;\n\n  return (\n    <Image\n      fixed={data.avatar.childImageSharp.fixed}\n      alt={author}\n      style={{\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0,\n        minWidth: 50,\n        borderRadius: `100%`,\n      }}\n      imgStyle={{\n        borderRadius: `50%`,\n      }}\n    />\n  );\n};\n\nexport default Avatar;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n        description\n        defaultImage\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction Seo({ description, lang, meta, title, image }) {\n  const data = useStaticQuery(query);\n  const { siteMetadata } = data.site || {};\n  const {\n    siteUrl,\n    title: siteTitle,\n    defaultImage,\n    social: { twitter },\n  } = siteMetadata;\n  const metaTitle = `${title}${title && ' | '}${siteTitle}`;\n  const metaDescription = description || siteMetadata.description;\n  const siteImage = `${siteUrl}${image || defaultImage}`;\n  const metaData = [\n    { name: `image`, content: siteImage },\n    { name: `description`, content: metaDescription },\n    { property: `og:title`, content: metaTitle },\n    { property: `og:type`, content: `website` },\n    { property: `og:image`, content: siteImage },\n    // { property: `og:url`, content: siteImage },\n    { property: `og:description`, content: metaDescription },\n    { name: `twitter:card`, content: `summary` },\n    { name: `twitter:creator`, content: twitter },\n    { name: `twitter:title`, content: metaTitle },\n    { name: `twitter:description`, content: metaDescription },\n    { name: `twitter:image`, content: siteImage },\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={metaData}\n    />\n  );\n}\n\nSeo.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n};\n\nexport default Seo;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Link } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query LayoutQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Header = ({ title, social }) => (\n  <header className={styles.header}>\n    <div className={styles.headerInner}>\n      <h3 className={styles.headerSiteTitle}>\n        <Link className={styles.siteName} to={`/`}>\n          {title}\n        </Link>\n      </h3>\n      <ul className={styles.headerSocials}>\n        <li className={styles.socialItem}>\n          <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n        </li>\n        <li className={styles.socialItem}>\n          <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n        </li>\n      </ul>\n    </div>\n  </header>\n);\n\nexport const Footer = ({ author }) => (\n  <footer className={styles.footer}>\n    <div className={styles.footerInner}>\n      <div className={styles.footerAvatar}>\n        <Avatar />\n        <Link to=\"/\" className={styles.footerLink}>\n          suzukalight.com\n        </Link>\n      </div>\n      <p className={styles.footerCopyright}>{`© 2019 by ${author}`}</p>\n    </div>\n  </footer>\n);\n\nexport const Centered = ({ children }) => <div className={styles.centered}>{children}</div>;\n\nexport const Layout = ({ location, title, children }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.root}>\n      <Header location={location} title={title} social={social} />\n      <main className={styles.main}>{children}</main>\n      <Footer author={author} />\n    </div>\n  );\n};\n\nexport default Layout;\n","import differenceInMilliseconds from 'date-fns/difference_in_milliseconds';\n\nexport const convertFromMarkdownToArticle = data => {\n  const { site, markdownRemark } = data || {};\n  const { html, frontmatter, fields, tableOfContents, excerpt } = markdownRemark;\n  const description = frontmatter.description || frontmatter.excerpt;\n\n  return {\n    head: {\n      ...frontmatter,\n      ...fields,\n      tableOfContents,\n      excerpt,\n      description,\n      source: 'github',\n    },\n    body: html,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertFromContentfulToArticle = data => {\n  const { site, contentfulArticle } = data || {};\n  const { body, ...head } = contentfulArticle;\n  const description = head.description || head.excerpt;\n\n  return {\n    head: {\n      ...head,\n      description,\n      source: 'contentful',\n      slug: `/${head.slug}/`,\n    },\n    richTextJson: (body || {}).json,\n    siteMetadata: site.siteMetadata,\n  };\n};\n\nexport const convertToArticle = data => {\n  if (!data) return null;\n  if (data.markdownRemark) return convertFromMarkdownToArticle(data);\n  if (data.contentfulArticle) return convertFromContentfulToArticle(data);\n  return null;\n};\n\nexport const convertToArticles = data => {\n  if (!data) return null;\n  const { site, allMarkdownRemark, allContentfulArticle } = data || {};\n\n  const articlesGitHub = ((allMarkdownRemark || {}).edges || []).map(e =>\n    convertFromMarkdownToArticle({ site, markdownRemark: e.node }),\n  );\n  const articlesContentful = ((allContentfulArticle || {}).edges || []).map(e =>\n    convertFromContentfulToArticle({ site, contentfulArticle: e.node }),\n  );\n\n  return [...articlesGitHub, ...articlesContentful];\n};\n\nexport const sortByDate = data =>\n  data.sort((a, b) =>\n    differenceInMilliseconds(((b || {}).head || {}).date, ((a || {}).head || {}).date),\n  );\n","import React from 'react';\nimport Image from 'gatsby-image';\n\nexport const getFluidImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fluid={image.childImageSharp.fluid} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n\nexport const getFixedImage = image => {\n  if (!image) return null;\n  if (image && image.childImageSharp) return <Image fixed={image.childImageSharp.fixed} />;\n  if (image && image.sizes) return <Image fluid={image.sizes} />;\n  return null;\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport styles from './index.module.scss';\n\nconst Tag = ({ tag }) => (\n  <Link className={styles.link} to={`/tags/${kebabCase(tag)}/`}>\n    <li className={styles.tag}>{tag}</li>\n  </Link>\n);\n\nconst Tags = ({ className, tags }) => (\n  <ul className={cn(styles.tags, className)}>\n    {(tags || []).map(tag => (\n      <Tag key={tag} tag={tag} />\n    ))}\n  </ul>\n);\n\nexport default Tags;\n","import React from 'react';\nimport cn from 'classnames';\nimport format from 'date-fns/format';\n\nimport Tags from '../../atoms/Tags';\n\nimport styles from './index.module.scss';\n\nconst DateAndTags = ({ className, date, tags }) => (\n  <div className={cn(styles.root, className)}>\n    <small className={styles.date}>{format(date, 'YYYY/M/D')}</small>\n    <Tags className={styles.tags} tags={tags} />\n  </div>\n);\n\nexport default DateAndTags;\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nexport default class Iframely extends React.Component {\n  componentDidMount() {\n    // 記事ページから古い記事に遷移したときにもロードされるようにする\n    if (window.iframely) {\n      window.iframely.load();\n    }\n  }\n\n  render() {\n    // マークダウンファイルにembed.jsのスクリプトタグを記述しても読み込まれないため\n    // コンポーネントでReact Helmetを使って読み込む\n    return (\n      <Helmet>\n        <script type=\"text/javascript\" src=\"https://cdn.iframe.ly/embed.js\" charset=\"utf-8\" />\n      </Helmet>\n    );\n  }\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Avatar from '../../atoms/Avatar';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n          github\n        }\n      }\n    }\n  }\n`;\n\nconst Bio = ({ className }) => {\n  const data = useStaticQuery(query);\n  const { author, social } = data.site.siteMetadata;\n\n  return (\n    <div className={cn(styles.root, className)}>\n      <Avatar />\n\n      <div className={styles.description}>\n        <p className={styles.username}>\n          Written by <strong>{author}</strong>.\n        </p>\n\n        <ul className={styles.social}>\n          <li className={styles.socialItem}>\n            <a href={`https://github.com/${social.twitter}`}>GitHub</a>\n          </li>\n          <li className={styles.socialItem}>\n            <a href={`https://twitter.com/${social.github}`}>Twitter</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  LineShareButton,\n  PocketShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  LineIcon,\n  PocketIcon,\n} from 'react-share';\n\nimport styles from './index.module.scss';\n\nconst query = graphql`\n  query SocialLinksQuery {\n    site {\n      siteMetadata {\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nconst SocialLinks = ({ className, url, title, via }) => {\n  const data = useStaticQuery(query);\n  const { siteUrl, social } = data.site.siteMetadata;\n  const twitterAccount = via || social.twitter;\n  const fullUrl = `${siteUrl}${url}`;\n\n  return (\n    <ul className={cn(styles.root, className)}>\n      <li className={styles.item}>\n        <FacebookShareButton url={fullUrl}>\n          <FacebookIcon size={32} round />\n        </FacebookShareButton>\n      </li>\n      <li className={styles.item}>\n        <TwitterShareButton title={title} via={twitterAccount} url={fullUrl}>\n          <TwitterIcon size={32} round />\n        </TwitterShareButton>\n      </li>\n      <li className={styles.item}>\n        <LineShareButton title={title} url={fullUrl}>\n          <LineIcon size={32} round />\n        </LineShareButton>\n      </li>\n      <li className={styles.item}>\n        <PocketShareButton title={title} url={fullUrl}>\n          <PocketIcon size={32} round />\n        </PocketShareButton>\n      </li>\n      <li className={styles.item}>\n        <div className={styles.hatebu}>\n          <a\n            href=\"https://b.hatena.ne.jp/entry/\"\n            className=\"hatena-bookmark-button\"\n            data-hatena-bookmark-layout=\"basic\"\n            data-hatena-bookmark-width=\"32\"\n            data-hatena-bookmark-height=\"32\"\n            title=\"このエントリーをはてなブックマークに追加\"\n          >\n            <img\n              src=\"https://b.st-hatena.com/images/v4/public/entry-button/button-only@2x.png\"\n              className={styles.hatebuImage}\n              alt=\"このエントリーをはてなブックマークに追加\"\n              width=\"32\"\n              height=\"32\"\n            />\n          </a>\n          <script\n            type=\"text/javascript\"\n            src=\"https://b.st-hatena.com/js/bookmark_button.js\"\n            charSet=\"utf-8\"\n            async=\"async\"\n          ></script>\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { BLOCKS } from '@contentful/rich-text-types';\n\nconst renderOptions = {\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (_, children) => <p className=\"contentful-paragraph\">{children}</p>,\n    [BLOCKS.EMBEDDED_ASSET]: node => {\n      const { target } = node.data || {};\n      const { title, description, file } = (target || {}).fields || {};\n      if (!file) return null;\n\n      const key1 = Object.keys(file)[0];\n      const { contentType, url } = file[key1];\n      const mimeGroup = contentType.split('/')[0];\n\n      switch (mimeGroup) {\n        case 'image': {\n          return (\n            <img\n              title={title ? title[key1] : null}\n              alt={description ? description[key1] : null}\n              src={url}\n            />\n          );\n        }\n        default: {\n          return null;\n        }\n      }\n    },\n  },\n};\n\nexport const contentfulArticleToReactComponents = json => {\n  return documentToReactComponents(json, renderOptions);\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport get from 'lodash/get';\n\nimport Seo from '../../atoms/Seo';\nimport Iframely from '../../atoms/Iframely';\nimport DateAndTags from '../../molecules/DateAndTags';\nimport Bio from '../../molecules/Bio';\nimport SocialLinks from '../../molecules/SocialLinks';\nimport { Layout, Centered } from '../Layout';\n\nimport { convertToArticle } from '../../../utils/article';\nimport { contentfulArticleToReactComponents } from '../../../utils/contentful';\nimport { getFluidImage } from '../../../utils/dom';\n\nimport styles from './index.module.scss';\n\nconst Pager = ({ previous, next }) => (\n  <div className={styles.footerPager}>\n    <ul className={styles.pager}>\n      <li className={styles.prev}>\n        {previous && (\n          <Link to={previous.head.slug} rel=\"prev\">\n            {`← ${previous.head.title}`}\n          </Link>\n        )}\n      </li>\n      <li className={styles.next}>\n        {next && (\n          <Link to={next.head.slug} rel=\"next\">\n            {`${next.head.title} →`}\n          </Link>\n        )}\n      </li>\n    </ul>\n  </div>\n);\n\nconst BlogPostTemplate = ({ location, siteMetadata, head, body, richTextJson, pageContext }) => (\n  <Layout location={location} title={siteMetadata.title}>\n    <Seo\n      title={head.title}\n      description={head.description || head.excerpt}\n      image={get(head, 'hero.childImageSharp.fluid.src')}\n    />\n    <Iframely />\n\n    <Centered>\n      <section className={styles.head}>\n        {head.hero && <div className={styles.hero}>{getFluidImage(head.hero)}</div>}\n\n        <Link className={styles.category} to={`/categories/${kebabCase(head.category)}`}>\n          <span>{head.category}</span>\n        </Link>\n        <h1 className={styles.title}>{head.title}</h1>\n        <p className={styles.description}>{head.description}</p>\n        <DateAndTags date={head.date} tags={head.tags} />\n      </section>\n\n      {head && head.tableOfContents && (\n        <section className={styles.toc}>\n          <h1 className={styles.tocHeader}>目次</h1>\n          <div\n            className={styles.tocBody}\n            dangerouslySetInnerHTML={{ __html: head.tableOfContents }}\n          />\n        </section>\n      )}\n\n      {body && <div className={styles.article} dangerouslySetInnerHTML={{ __html: body }} />}\n      {richTextJson && (\n        <div className={styles.article}>{contentfulArticleToReactComponents(richTextJson)}</div>\n      )}\n\n      <section className={styles.footer}>\n        <SocialLinks className={styles.socialLinks} url={head.slug} title={head.title} />\n        <Bio className={styles.bio} />\n        <Pager previous={pageContext.previous} next={pageContext.next} />\n      </section>\n    </Centered>\n  </Layout>\n);\n\nconst BlogPost = ({ data, pageContext }) => {\n  return <BlogPostTemplate {...convertToArticle(data)} pageContext={pageContext} />;\n};\n\nexport default BlogPost;\n"],"sourceRoot":""}