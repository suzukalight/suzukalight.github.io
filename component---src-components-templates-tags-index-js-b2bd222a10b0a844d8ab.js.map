{"version":3,"sources":["webpack:///./src/components/templates/Tags/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_Layout__WEBPACK_IMPORTED_MODULE_3__","_atoms_Seo__WEBPACK_IMPORTED_MODULE_4__","_molecules_Posts__WEBPACK_IMPORTED_MODULE_5__","_molecules_Hero__WEBPACK_IMPORTED_MODULE_6__","_index_module_scss__WEBPACK_IMPORTED_MODULE_7__","_index_module_scss__WEBPACK_IMPORTED_MODULE_7___default","Tags","_ref","location","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","tagHeader","totalCount","siteTitle","site","siteMetadata","title","a","createElement","className","styles","root","header","heading","allTags","to","posts","propTypes","PropTypes","object"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAO,EAAAQ,GAWME,EAAO,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,YAAaC,EAAWH,EAAXG,KAC7BC,EAAQF,EAARE,IADwCC,EAElBF,EAAKG,kBAA3BC,EAFwCF,EAExCE,MACFC,EAAS,IAAOJ,EAAP,aAHiCC,EAEjCI,WACA,KACTC,EAAYP,EAAKQ,KAAKC,aAAaC,MAEzC,OACEzB,EAAA0B,EAAAC,cAACtB,EAAA,EAAD,CAAQQ,SAAUA,EAAUY,MAAOH,GACjCtB,EAAA0B,EAAAC,cAACrB,EAAA,EAAD,CAAKmB,MAAOL,IAEZpB,EAAA0B,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,MACrB9B,EAAA0B,EAAAC,cAACnB,EAAA,EAAD,MAEAR,EAAA0B,EAAAC,cAAA,MAAIC,UAAWC,IAAOE,QACpB/B,EAAA0B,EAAAC,cAAA,QAAMC,UAAWC,IAAOG,SAAUZ,GAClCpB,EAAA0B,EAAAC,cAAA,QAAMC,UAAWC,IAAOI,SACtBjC,EAAA0B,EAAAC,cAACvB,EAAA,EAAD,CAAM8B,GAAG,SAAT,eAIJlC,EAAA0B,EAAAC,cAACpB,EAAA,EAAD,CAAOqB,UAAWC,IAAOM,MAAOA,MAAOhB,OAM/CR,EAAKyB,UAAY,CACftB,YAAauB,IAAUC,OACvBvB,KAAMsB,IAAUC,QAGH3B,YAER,IAAMb,EAAS","file":"component---src-components-templates-tags-index-js-b2bd222a10b0a844d8ab.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../Layout';\nimport Seo from '../../atoms/Seo';\nimport Posts from '../../molecules/Posts';\nimport Hero from '../../molecules/Hero';\n\nimport styles from './index.module.scss';\n\nconst Tags = ({ location, pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `\"${tag}\" に関する記事 (${totalCount}件)`;\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={tagHeader} />\n\n      <div className={styles.root}>\n        <Hero />\n\n        <h1 className={styles.header}>\n          <span className={styles.heading}>{tagHeader}</span>\n          <span className={styles.allTags}>\n            <Link to=\"/tags\">すべてのタグを表示</Link>\n          </span>\n        </h1>\n\n        <Posts className={styles.posts} posts={edges} />\n      </div>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/M/D\")\n            title\n            description\n            category\n            tags\n            hero {\n              childImageSharp {\n                fixed(width: 280, height: 140) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}